MacBook-Pro-de-Paco:MFE duran$ ~/Maude/Alpha115/maude-Yices2.darwin64 examples/sets/multiset-algebra0.maude src/mfe.maude examples/sets/multiset-algebra-check.maude
		     \||||||||||||||||||/
		   --- Welcome to Maude ---
		     /||||||||||||||||||\
	   Maude alpha115 built: Aug 11 2017 19:57:09
	    Copyright 1997-2017 SRI International
		   Tue Dec 12 12:31:49 2017

	    Full Maude 2.7f November 20th 2017

The Maude Formal Environment 1.0c
    Inductive Theorem Prover - July 20th 2010
    Sufficient Completeness Checker 2a - August 2010
    Church-Rosser Checker 3r - December 12th 2017
    Coherence Checker 3r - December 12th 2017
    Maude Termination Tool 1.5j - August 11th 2014

set include BOOL off

set include TRUTH-VALUE on

rewrites: 76 in 0ms cpu (1ms real) (76000000 rewrites/second)
The CRC has been set as current tool.

rewrites: 30735404 in 348720ms cpu (371868ms real) (88137 rewrites/second)
Church-Rosser check for MULTISET-ALGEBRA
The following critical pairs must be proved joinable:
  cp MULTISET-ALGEBRA1472
    @1:Nat C= @3:Mult and @2:Nat C=(@3:Mult \ @1:Nat)
    = @1:Nat C=(@3:Mult \ @2:Nat)and @2:Nat C= @3:Mult .
  cp MULTISET-ALGEBRA1473
    @1:Nat C= @4:Mult and(@3:Mult,@2:Nat)C=(@4:Mult \ @1:Nat)
    = @2:Nat C= @4:Mult and(@3:Mult,@1:Nat)C=(@4:Mult \ @2:Nat).
  cp MULTISET-ALGEBRA2945 for set22 and set22
    @3:[Mult],s([rem(@1:Nat,@2:Nat)])
    = @3:[Mult],s([rem(@2:Nat,@1:Nat)]).
  cp MULTISET-ALGEBRA2947 for set22 and set22
    @4:[Mult],s([rem(@2:Nat,@1:Mult,@3:Nat)])
    = @4:[Mult],s([rem(@3:Nat,@1:Mult,@2:Nat)]).
  cp MULTISET-ALGEBRA2948 for set22 and set22
    s([rem(@1:Nat,@2:Nat)])
    = s([rem(@2:Nat,@1:Nat)]).
  cp MULTISET-ALGEBRA2950 for set22 and set22
    s([rem(@2:Nat,@1:Mult,@3:Nat)])
    = s([rem(@3:Nat,@1:Mult,@2:Nat)]).
  cp MULTISET-ALGEBRA296 for set08 and set08
    @2:[Mult],((@1:Mult \ @3:Nat)\ @4:Nat)
    = @2:[Mult],((@1:Mult \ @4:Nat)\ @3:Nat).
  cp MULTISET-ALGEBRA32 for set12 and set12
    @2:Nat C= @1:Mult and @3:Nat C=(@1:Mult \ @2:Nat)and @4:Nat C=((@1:Mult \ @2:Nat)\ @3:Nat)
    = @2:Nat C=(@1:Mult \ @3:Nat)and @3:Nat C= @1:Mult and @4:Nat C=((@1:Mult \ @3:Nat)\ @2:Nat).
  cp MULTISET-ALGEBRA35 for set12 and set12
    @3:Nat C= @1:Mult and @4:Nat C=(@1:Mult \ @3:Nat)and(@2:Mult,@5:Nat)C=((@1:Mult \ @3:Nat)\ @4:Nat)
    = @3:Nat C=(@1:Mult \ @4:Nat)and @4:Nat C= @1:Mult and(@2:Mult,@5:Nat)C=((@1:Mult \ @4:Nat)\
    @3:Nat).
  cp MULTISET-ALGEBRA36 for set12 and set12
    @2:Nat C=(@1:Mult \ @3:Nat)and @3:Nat C= @1:Mult and @4:Nat C=((@1:Mult \ @3:Nat)\ @2:Nat)and @5:Nat
    C=(((@1:Mult \ @3:Nat)\ @2:Nat)\ @4:Nat)
    = @2:Nat C=(@1:Mult \ @4:Nat)and @3:Nat C=((@1:Mult \ @4:Nat)\ @2:Nat)and @4:Nat C= @1:Mult and
    @5:Nat C=(((@1:Mult \ @4:Nat)\ @2:Nat)\ @3:Nat).
  cp MULTISET-ALGEBRA397 for set08 and set08
    @2:[Mult],(((@1:Mult \ @4:Nat)\ @5:Nat)\ @3:Mult)
    = @2:[Mult],(((@1:Mult \ @5:Nat)\ @4:Nat)\ @3:Mult).
  cp MULTISET-ALGEBRA40 for set12 and set12
    @3:Nat C=(@1:Mult \ @4:Nat)and @4:Nat C= @1:Mult and @5:Nat C=((@1:Mult \ @4:Nat)\ @3:Nat)and(
    @2:Mult,@6:Nat)C=(((@1:Mult \ @4:Nat)\ @3:Nat)\ @5:Nat)
    = @3:Nat C=(@1:Mult \ @5:Nat)and @4:Nat C=((@1:Mult \ @5:Nat)\ @3:Nat)and @5:Nat C= @1:Mult and(
    @2:Mult,@6:Nat)C=(((@1:Mult \ @5:Nat)\ @3:Nat)\ @4:Nat).
  cp MULTISET-ALGEBRA47 for set08 and set08
    (@1:Mult \ @3:Nat)\ @2:Nat
    =(@1:Mult \ @2:Nat)\ @3:Nat .
  cp MULTISET-ALGEBRA61 for set08 and set08
    ((@1:Mult \ @4:Nat)\ @3:Nat)\ @2:Mult
    =((@1:Mult \ @3:Nat)\ @4:Nat)\ @2:Mult .
  ccp MULTISET-ALGEBRA3005 for set07 and set07
    @3:Nat
    = @2:Nat
    if @1:Nat ~ @3:Nat = true /\ @1:Nat ~ @2:Nat = true .
  ccp MULTISET-ALGEBRA3011 for set07 and set07
    @3:Nat,@4:[Mult]
    = @2:Nat,@4:[Mult]
    if @1:Nat ~ @3:Nat = true /\ @1:Nat ~ @2:Nat = true .
  ccp MULTISET-ALGEBRA3526 for set07 and set11
    @1:Nat ~ @4:Nat and @3:Nat ~ @4:Nat xor @1:Nat ~ @4:Nat xor @3:Nat ~ @4:Nat
    = @4:Nat C=(@1:Nat \ @2:Nat)xor @4:Nat C=(@1:Nat \ @2:Nat)and @3:Nat ~ @4:Nat xor @3:Nat ~ @4:Nat
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3527 for set07 and set11
    @5:Nat C= @4:Mult xor @5:Nat C= @4:Mult and @1:Nat ~ @5:Nat xor @5:Nat C= @4:Mult and @3:Nat ~
    @5:Nat xor @1:Nat ~ @5:Nat and @3:Nat ~ @5:Nat xor @5:Nat C= @4:Mult and @1:Nat ~ @5:Nat and @3:Nat
    ~ @5:Nat xor @1:Nat ~ @5:Nat xor @3:Nat ~ @5:Nat
    = @5:Nat C= @4:Mult,(@1:Nat \ @2:Nat)xor @5:Nat C= @4:Mult,(@1:Nat \ @2:Nat)and @3:Nat ~ @5:Nat xor
    @3:Nat ~ @5:Nat
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3532 for set07 and set12
    @1:Nat C= @5:Mult and @3:Nat C=(@5:Mult \ @1:Nat)and @4:Nat C=((@5:Mult \ @1:Nat)\ @3:Nat)
    = @3:Nat C= @5:Mult and(@4:Nat,(@1:Nat \ @2:Nat))C=(@5:Mult \ @3:Nat)
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3533 for set07 and set12
    @1:Nat C= @6:Mult and @3:Nat C=(@6:Mult \ @1:Nat)and(@5:Mult,@4:Nat)C=((@6:Mult \ @1:Nat)\ @3:Nat)
    = @3:Nat C= @6:Mult and(@5:Mult,@4:Nat,(@1:Nat \ @2:Nat))C=(@6:Mult \ @3:Nat)
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3554 for set07 and set22
    @4:[Mult],s([rem(@1:Nat,@3:Nat)])
    = @4:[Mult],s([rem(@3:Nat,@1:Nat \ @2:Nat)])
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3555 for set07 and set22
    @5:[Mult],s([rem(@1:Nat,@4:Mult,@3:Nat)])
    = @5:[Mult],s([rem(@3:Nat,@4:Mult,(@1:Nat \ @2:Nat))])
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3568 for set07 and set18
    @5:Mult C= @1:Nat,@3:Nat,@4:Nat and @1:Nat C= @5:Mult and @3:Nat C=(@5:Mult \ @1:Nat)and @4:Nat C=((
    @5:Mult \ @1:Nat)\ @3:Nat)
    = @5:Mult C= @3:Nat,@4:Nat,(@1:Nat \ @2:Nat)and @3:Nat C= @5:Mult and(@4:Nat,(@1:Nat \ @2:Nat))C=(
    @5:Mult \ @3:Nat)
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3569 for set07 and set18
    @6:Mult C= @5:Mult,@1:Nat,@3:Nat,@4:Nat and @1:Nat C= @6:Mult and @3:Nat C=(@6:Mult \ @1:Nat)and(
    @5:Mult,@4:Nat)C=((@6:Mult \ @1:Nat)\ @3:Nat)
    = @6:Mult C= @5:Mult,@3:Nat,@4:Nat,(@1:Nat \ @2:Nat)and @3:Nat C= @6:Mult and(@5:Mult,@4:Nat,(@1:Nat
    \ @2:Nat))C=(@6:Mult \ @3:Nat)
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3570 for set07 and set22
    s([rem(@1:Nat,@3:Nat)])
    = s([rem(@3:Nat,@1:Nat \ @2:Nat)])
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3571 for set07 and set22
    s([rem(@1:Nat,@4:Mult,@3:Nat)])
    = s([rem(@3:Nat,@4:Mult,(@1:Nat \ @2:Nat))])
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3732 for set07 and set12
    @3:Nat C= @6:Mult and @4:Nat C=(@6:Mult \ @3:Nat)and(@5:Nat,(@2:Mult \ @1:Nat))C=((@6:Mult \
    @3:Nat)\ @4:Nat)
    = @4:Nat C= @6:Mult and(@5:Nat,((@2:Mult,@3:Nat)\ @1:Nat))C=(@6:Mult \ @4:Nat)
    if @1:Nat ~ @3:Nat = false .
  ccp MULTISET-ALGEBRA3733 for set07 and set12
    @3:Nat C= @7:Mult and @5:Nat C=(@7:Mult \ @3:Nat)and(@4:Mult,@6:Nat,(@2:Mult \ @1:Nat))C=((@7:Mult \
    @3:Nat)\ @5:Nat)
    = @5:Nat C= @7:Mult and(@4:Mult,@6:Nat,((@2:Mult,@3:Nat)\ @1:Nat))C=(@7:Mult \ @5:Nat)
    if @1:Nat ~ @3:Nat = false .
  ccp MULTISET-ALGEBRA3755 for set07 and set22
    @6:[Mult],s([rem(@3:Nat,@4:Mult,@5:Nat,(@2:Mult \ @1:Nat))])
    = @6:[Mult],s([rem(@5:Nat,@4:Mult,((@2:Mult,@3:Nat)\ @1:Nat))])
    if @1:Nat ~ @3:Nat = false .
  ccp MULTISET-ALGEBRA3768 for set07 and set18
    @6:Mult C= @3:Nat,@4:Nat,@5:Nat,(@2:Mult \ @1:Nat)and @3:Nat C= @6:Mult and @4:Nat C=(@6:Mult \
    @3:Nat)and(@5:Nat,(@2:Mult \ @1:Nat))C=((@6:Mult \ @3:Nat)\ @4:Nat)
    = @6:Mult C= @4:Nat,@5:Nat,((@2:Mult,@3:Nat)\ @1:Nat)and @4:Nat C= @6:Mult and(@5:Nat,((@2:Mult,
    @3:Nat)\ @1:Nat))C=(@6:Mult \ @4:Nat)
    if @1:Nat ~ @3:Nat = false .
  ccp MULTISET-ALGEBRA3769 for set07 and set18
    @7:Mult C= @4:Mult,@3:Nat,@5:Nat,@6:Nat,(@2:Mult \ @1:Nat)and @3:Nat C= @7:Mult and @5:Nat C=(
    @7:Mult \ @3:Nat)and(@4:Mult,@6:Nat,(@2:Mult \ @1:Nat))C=((@7:Mult \ @3:Nat)\ @5:Nat)
    = @7:Mult C= @4:Mult,@5:Nat,@6:Nat,((@2:Mult,@3:Nat)\ @1:Nat)and @5:Nat C= @7:Mult and(@4:Mult,
    @6:Nat,((@2:Mult,@3:Nat)\ @1:Nat))C=(@7:Mult \ @5:Nat)
    if @1:Nat ~ @3:Nat = false .
  ccp MULTISET-ALGEBRA3771 for set07 and set22
    s([rem(@3:Nat,@4:Mult,@5:Nat,(@2:Mult \ @1:Nat))])
    = s([rem(@5:Nat,@4:Mult,((@2:Mult,@3:Nat)\ @1:Nat))])
    if @1:Nat ~ @3:Nat = false .
  ccp MULTISET-ALGEBRA3926 for set18 and set11
    @2:Nat ~ @4:Nat and @3:Nat ~ @4:Nat xor @2:Nat ~ @4:Nat xor @3:Nat ~ @4:Nat
    = @4:Nat C= rem(@1:Nat,@2:Nat)xor @4:Nat C= rem(@1:Nat,@2:Nat)and @3:Nat ~ @4:Nat xor @3:Nat ~
    @4:Nat
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3927 for set18 and set11
    @5:Nat C= @4:Mult xor @5:Nat C= @4:Mult and @2:Nat ~ @5:Nat xor @5:Nat C= @4:Mult and @3:Nat ~
    @5:Nat xor @2:Nat ~ @5:Nat and @3:Nat ~ @5:Nat xor @5:Nat C= @4:Mult and @2:Nat ~ @5:Nat and @3:Nat
    ~ @5:Nat xor @2:Nat ~ @5:Nat xor @3:Nat ~ @5:Nat
    = @5:Nat C= @4:Mult,rem(@1:Nat,@2:Nat)xor @5:Nat C= @4:Mult,rem(@1:Nat,@2:Nat)and @3:Nat ~ @5:Nat
    xor @3:Nat ~ @5:Nat
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3932 for set18 and set12
    @2:Nat C= @5:Mult and @3:Nat C=(@5:Mult \ @2:Nat)and @4:Nat C=((@5:Mult \ @2:Nat)\ @3:Nat)
    = @3:Nat C= @5:Mult and(@4:Nat,rem(@1:Nat,@2:Nat))C=(@5:Mult \ @3:Nat)
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3933 for set18 and set12
    @2:Nat C= @6:Mult and @3:Nat C=(@6:Mult \ @2:Nat)and(@5:Mult,@4:Nat)C=((@6:Mult \ @2:Nat)\ @3:Nat)
    = @3:Nat C= @6:Mult and(@5:Mult,@4:Nat,rem(@1:Nat,@2:Nat))C=(@6:Mult \ @3:Nat)
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3954 for set18 and set22
    @4:[Mult],s([rem(@2:Nat,@3:Nat)])
    = @4:[Mult],s([rem(@3:Nat,rem(@1:Nat,@2:Nat))])
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3955 for set18 and set22
    @5:[Mult],s([rem(@2:Nat,@4:Mult,@3:Nat)])
    = @5:[Mult],s([rem(@3:Nat,@4:Mult,rem(@1:Nat,@2:Nat))])
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3968 for set18 and set18
    @5:Mult C= @2:Nat,@3:Nat,@4:Nat and @2:Nat C= @5:Mult and @3:Nat C=(@5:Mult \ @2:Nat)and @4:Nat C=((
    @5:Mult \ @2:Nat)\ @3:Nat)
    = @5:Mult C= @3:Nat,@4:Nat,rem(@1:Nat,@2:Nat)and @3:Nat C= @5:Mult and(@4:Nat,rem(@1:Nat,@2:Nat))C=(
    @5:Mult \ @3:Nat)
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3969 for set18 and set18
    @6:Mult C= @5:Mult,@2:Nat,@3:Nat,@4:Nat and @2:Nat C= @6:Mult and @3:Nat C=(@6:Mult \ @2:Nat)and(
    @5:Mult,@4:Nat)C=((@6:Mult \ @2:Nat)\ @3:Nat)
    = @6:Mult C= @5:Mult,@3:Nat,@4:Nat,rem(@1:Nat,@2:Nat)and @3:Nat C= @6:Mult and(@5:Mult,@4:Nat,rem(
    @1:Nat,@2:Nat))C=(@6:Mult \ @3:Nat)
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3970 for set18 and set22
    s([rem(@2:Nat,@3:Nat)])
    = s([rem(@3:Nat,rem(@1:Nat,@2:Nat))])
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA3971 for set18 and set22
    s([rem(@2:Nat,@4:Mult,@3:Nat)])
    = s([rem(@3:Nat,@4:Mult,rem(@1:Nat,@2:Nat))])
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA4132 for set18 and set12
    @2:Nat C= @6:Mult and @4:Nat C=(@6:Mult \ @2:Nat)and(@5:Nat,rem(@1:Nat,@3:Mult))C=((@6:Mult \
    @2:Nat)\ @4:Nat)
    = @4:Nat C= @6:Mult and(@5:Nat,rem(@1:Nat,@3:Mult,@2:Nat))C=(@6:Mult \ @4:Nat)
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA4133 for set18 and set12
    @2:Nat C= @7:Mult and @4:Nat C=(@7:Mult \ @2:Nat)and(@6:Mult,@5:Nat,rem(@1:Nat,@3:Mult))C=((@7:Mult
    \ @2:Nat)\ @4:Nat)
    = @4:Nat C= @7:Mult and(@6:Mult,@5:Nat,rem(@1:Nat,@3:Mult,@2:Nat))C=(@7:Mult \ @4:Nat)
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA4155 for set18 and set22
    @6:[Mult],s([rem(@2:Nat,@5:Mult,@4:Nat,rem(@1:Nat,@3:Mult))])
    = @6:[Mult],s([rem(@4:Nat,@5:Mult,rem(@1:Nat,@3:Mult,@2:Nat))])
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA4168 for set18 and set18
    @6:Mult C= @2:Nat,@4:Nat,@5:Nat,rem(@1:Nat,@3:Mult)and @2:Nat C= @6:Mult and @4:Nat C=(@6:Mult \
    @2:Nat)and(@5:Nat,rem(@1:Nat,@3:Mult))C=((@6:Mult \ @2:Nat)\ @4:Nat)
    = @6:Mult C= @4:Nat,@5:Nat,rem(@1:Nat,@3:Mult,@2:Nat)and @4:Nat C= @6:Mult and(@5:Nat,rem(@1:Nat,
    @3:Mult,@2:Nat))C=(@6:Mult \ @4:Nat)
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA4169 for set18 and set18
    @7:Mult C= @6:Mult,@2:Nat,@4:Nat,@5:Nat,rem(@1:Nat,@3:Mult)and @2:Nat C= @7:Mult and @4:Nat C=(
    @7:Mult \ @2:Nat)and(@6:Mult,@5:Nat,rem(@1:Nat,@3:Mult))C=((@7:Mult \ @2:Nat)\ @4:Nat)
    = @7:Mult C= @6:Mult,@4:Nat,@5:Nat,rem(@1:Nat,@3:Mult,@2:Nat)and @4:Nat C= @7:Mult and(@6:Mult,
    @5:Nat,rem(@1:Nat,@3:Mult,@2:Nat))C=(@7:Mult \ @4:Nat)
    if @1:Nat ~ @2:Nat = false .
  ccp MULTISET-ALGEBRA4171 for set18 and set22
    s([rem(@2:Nat,@5:Mult,@4:Nat,rem(@1:Nat,@3:Mult))])
    = s([rem(@4:Nat,@5:Mult,rem(@1:Nat,@3:Mult,@2:Nat))])
    if @1:Nat ~ @2:Nat = false .
	The module is sort-decreasing.

Maude>
