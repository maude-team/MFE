The Maude Formal Environment 1.0c
    Inductive Theorem Prover - July 20th 2010
    Sufficient Completeness Checker 2a - August 2010
    Church-Rosser Checker 3r - August 6th 2018
    Coherence Checker 3r - December 12th 2017
    Maude Termination Tool 1.5j - August 11th 2014

rewrites: 80 in 3ms cpu (3ms real) (26350 rewrites/second)
The CRC has been set as current tool.

rewrites: 2593731 in 12369ms cpu (12739ms real) (209689 rewrites/second)
Church-Rosser check for MULTISET-ALGEBRA
The following critical pairs must be proved joinable:
  cp MULTISET-ALGEBRA100 for set07 and set07
    @4:[Mult],if @1:Nat ~ @3:Nat then @2:Nat else @3:Nat,if @1:Nat ~ @2:Nat then mt else @2:Nat fi fi
    = @4:[Mult],if @1:Nat ~ @2:Nat then @3:Nat else @2:Nat,if @1:Nat ~ @3:Nat then mt else @3:Nat fi fi .
  cp MULTISET-ALGEBRA101 for set07 and set07
    @5:[Mult],if @1:Nat ~ @3:Nat then @2:Nat,@4:Mult else @3:Nat,if @1:Nat ~ @2:Nat then @4:Mult else @2:Nat,(@4:Mult \ @1:Nat)fi fi
    = @5:[Mult],if @1:Nat ~ @2:Nat then @3:Nat,@4:Mult else @2:Nat,if @1:Nat ~ @3:Nat then @4:Mult else @3:Nat,(@4:Mult \ @1:Nat)fi fi .
  cp MULTISET-ALGEBRA1083 for set22 and set22
    @1:[Mult],s([if @2:Nat ~ @3:Nat then mt else @3:Nat fi])
    = @1:[Mult],s([if @2:Nat ~ @3:Nat then mt else @2:Nat fi]).
  cp MULTISET-ALGEBRA1084 for set22 and set22
    @1:[Mult],s([if @2:Nat ~ @3:Nat then rem(@2:Nat,@4:Mult)else @3:Nat,rem(@2:Nat,@4:Mult)fi])
    = @1:[Mult],s([if @2:Nat ~ @3:Nat then rem(@3:Nat,@4:Mult)else @2:Nat,rem(@3:Nat,@4:Mult)fi]).
  cp MULTISET-ALGEBRA1492 for set18 and set18
    @2:[Mult],if @1:Nat ~ @3:Nat then if @1:Nat ~ @4:Nat then mt else @4:Nat fi else @3:Nat,if @1:Nat ~ @4:Nat then mt else @4:Nat fi fi
    = @2:[Mult],if @1:Nat ~ @4:Nat then if @1:Nat ~ @3:Nat then mt else @3:Nat fi else @4:Nat,if @1:Nat ~ @3:Nat then mt else @3:Nat fi fi .
  cp MULTISET-ALGEBRA1493 for set18 and set18
    @2:[Mult],if @1:Nat ~ @3:Nat then if @1:Nat ~ @4:Nat then rem(@1:Nat,@5:Mult)else @4:Nat,rem(@1:Nat,@5:Mult)fi else @3:Nat,if @1:Nat ~ @4:Nat then rem(@1:Nat,@5:Mult)else @4:Nat,rem(@1:Nat,@5:Mult)fi fi
    = @2:[Mult],if @1:Nat ~ @4:Nat then if @1:Nat ~ @3:Nat then rem(@1:Nat,@5:Mult)else @3:Nat,rem(@1:Nat,@5:Mult)fi else @4:Nat,if @1:Nat ~ @3:Nat then rem(@1:Nat,@5:Mult)else @3:Nat,rem(@1:Nat,@5:Mult)fi fi .
  cp MULTISET-ALGEBRA1527 for set20 and set12
    @2:Nat C= @3:Mult and s(0)C=(@3:Mult \ @2:Nat)
    = @2:Nat C=(@3:Mult \ s(0))and s(0)C= @3:Mult .
  cp MULTISET-ALGEBRA1529 for set20 and set12
    @2:Nat C= @4:Mult and(@3:Mult,s(0))C=(@4:Mult \ @2:Nat)
    = s(0)C= @4:Mult and(@2:Nat,@3:Mult)C=(@4:Mult \ s(0)).
  cp MULTISET-ALGEBRA1533 for set20 and set08
    (@3:Mult \ @2:Nat)\ s(0)
    =(@3:Mult \ s(0))\ @2:Nat .
  cp MULTISET-ALGEBRA1535 for set20 and set08
    ((@4:Mult \ @2:Nat)\ s(0))\ @3:Mult
    =((@4:Mult \ s(0))\ @2:Nat)\ @3:Mult .
  cp MULTISET-ALGEBRA1557 for set20 and set08
    @3:[Mult],((@4:Mult \ @2:Nat)\ s(0))
    = @3:[Mult],((@4:Mult \ s(0))\ @2:Nat).
  cp MULTISET-ALGEBRA1561 for set20 and set08
    @4:[Mult],(((@5:Mult \ @2:Nat)\ s(0))\ @3:Mult)
    = @4:[Mult],(((@5:Mult \ s(0))\ @2:Nat)\ @3:Mult).
  cp MULTISET-ALGEBRA1630 for set19 and set12
    0 C= @2:Mult and @1:Nat C=(@2:Mult \ 0)
    = 0 C=(@2:Mult \ @1:Nat)and @1:Nat C= @2:Mult .
  cp MULTISET-ALGEBRA1632 for set19 and set12
    0 C= @3:Mult and(@1:Nat,@2:Mult)C=(@3:Mult \ 0)
    = @1:Nat C= @3:Mult and(0,@2:Mult)C=(@3:Mult \ @1:Nat).
  cp MULTISET-ALGEBRA1636 for set19 and set08
    (@2:Mult \ 0)\ @1:Nat
    =(@2:Mult \ @1:Nat)\ 0 .
  cp MULTISET-ALGEBRA1638 for set19 and set08
    ((@3:Mult \ 0)\ @1:Nat)\ @2:Mult
    =((@3:Mult \ @1:Nat)\ 0)\ @2:Mult .
  cp MULTISET-ALGEBRA1640 for set19 and set08
    ((@3:Mult \ 0)\ @1:Nat)\ @2:Nat
    =((@3:Mult \ @2:Nat)\ @1:Nat)\ 0 .
  cp MULTISET-ALGEBRA1641 for set19 and set08
    ((@4:Mult \ 0)\ @1:Nat)\ @2:Nat,@3:Mult
    =((@4:Mult \ @2:Nat)\ @1:Nat)\ 0,@3:Mult .
  cp MULTISET-ALGEBRA1660 for set19 and set08
    @2:[Mult],((@3:Mult \ 0)\ @1:Nat)
    = @2:[Mult],((@3:Mult \ @1:Nat)\ 0).
  cp MULTISET-ALGEBRA1664 for set19 and set08
    @3:[Mult],(((@4:Mult \ 0)\ @1:Nat)\ @2:Mult)
    = @3:[Mult],(((@4:Mult \ @1:Nat)\ 0)\ @2:Mult).
  cp MULTISET-ALGEBRA1666 for set19 and set08
    @3:[Mult],(((@4:Mult \ 0)\ @1:Nat)\ @2:Nat)
    = @3:[Mult],(((@4:Mult \ @2:Nat)\ @1:Nat)\ 0).
  cp MULTISET-ALGEBRA1667 for set19 and set08
    @4:[Mult],(((@5:Mult \ 0)\ @1:Nat)\ @2:Nat,@3:Mult)
    = @4:[Mult],(((@5:Mult \ @2:Nat)\ @1:Nat)\ 0,@3:Mult).
  cp MULTISET-ALGEBRA1733 for set20 and set12
    @1:Nat C= @4:Mult and s(| @3:Mult |)C=(@4:Mult \ @1:Nat)
    = @1:Nat C=(@4:Mult \ s(| @3:Mult |))and s(| @3:Mult |)C= @4:Mult .
  cp MULTISET-ALGEBRA1735 for set20 and set12
    @3:Nat C= @5:Mult and(@4:Mult,s(| @2:Mult |))C=(@5:Mult \ @3:Nat)
    = s(| @2:Mult |)C= @5:Mult and(@3:Nat,@4:Mult)C=(@5:Mult \ s(| @2:Mult |)).
  cp MULTISET-ALGEBRA1739 for set20 and set08
    (@4:Mult \ @1:Nat)\ s(| @3:Mult |)
    =(@4:Mult \ s(| @3:Mult |))\ @1:Nat .
  cp MULTISET-ALGEBRA1741 for set20 and set08
    ((@5:Mult \ @3:Nat)\ s(| @2:Mult |))\ @4:Mult
    =((@5:Mult \ s(| @2:Mult |))\ @3:Nat)\ @4:Mult .
  cp MULTISET-ALGEBRA1763 for set20 and set08
    @4:[Mult],((@5:Mult \ @1:Nat)\ s(| @3:Mult |))
    = @4:[Mult],((@5:Mult \ s(| @3:Mult |))\ @1:Nat).
  cp MULTISET-ALGEBRA1767 for set20 and set08
    @5:[Mult],(((@6:Mult \ @3:Nat)\ s(| @2:Mult |))\ @4:Mult)
    = @5:[Mult],(((@6:Mult \ s(| @2:Mult |))\ @3:Nat)\ @4:Mult).
  cp MULTISET-ALGEBRA1836
    @1:Nat C= @3:Mult and @2:Nat C=(@3:Mult \ @1:Nat)
    = @1:Nat C=(@3:Mult \ @2:Nat)and @2:Nat C= @3:Mult .
  cp MULTISET-ALGEBRA1837
    @1:Nat C= @4:Mult and(@2:Nat,@3:Mult)C=(@4:Mult \ @1:Nat)
    = @2:Nat C= @4:Mult and(@1:Nat,@3:Mult)C=(@4:Mult \ @2:Nat).
  cp MULTISET-ALGEBRA1838
    (@3:Mult \ @1:Nat)\ @2:Nat
    =(@3:Mult \ @2:Nat)\ @1:Nat .
  cp MULTISET-ALGEBRA1839
    ((@4:Mult \ @1:Nat)\ @2:Nat)\ @3:Mult
    =((@4:Mult \ @2:Nat)\ @1:Nat)\ @3:Mult .
  cp MULTISET-ALGEBRA1858
    @3:[Mult],((@4:Mult \ @1:Nat)\ @2:Nat)
    = @3:[Mult],((@4:Mult \ @2:Nat)\ @1:Nat).
  cp MULTISET-ALGEBRA1859
    @4:[Mult],(((@5:Mult \ @1:Nat)\ @2:Nat)\ @3:Mult)
    = @4:[Mult],(((@5:Mult \ @2:Nat)\ @1:Nat)\ @3:Mult).
  cp MULTISET-ALGEBRA22 for set09 and set12
    true
    = @1:Nat C= if @1:Nat ~ @2:Nat then @2:Nat else @1:Nat fi .
  cp MULTISET-ALGEBRA275 for set16 and set16
    @2:[Mult],if @3:Nat C= @1:Mult then @3:Nat,if @4:Nat C=(@1:Mult \ @3:Nat)then @4:Nat else mt fi else if @4:Nat C= @1:Mult then @4:Nat else mt fi fi
    = @2:[Mult],if @4:Nat C= @1:Mult then @4:Nat,if @3:Nat C=(@1:Mult \ @4:Nat)then @3:Nat else mt fi else if @3:Nat C= @1:Mult then @3:Nat else mt fi fi .
  cp MULTISET-ALGEBRA276 for set16 and set16
    @2:[Mult],if @3:Nat C= @1:Mult then @3:Nat,if @4:Nat C=(@1:Mult \ @3:Nat)then @4:Nat,(@5:Mult /\((@1:Mult \ @3:Nat)\ @4:Nat))else @5:Mult /\(@1:Mult \ @3:Nat)fi else if @4:Nat C= @1:Mult then @4:Nat,(
    @5:Mult /\(@1:Mult \ @4:Nat))else @5:Mult /\ @1:Mult fi fi
    = @2:[Mult],if @4:Nat C= @1:Mult then @4:Nat,if @3:Nat C=(@1:Mult \ @4:Nat)then @3:Nat,(@5:Mult /\((@1:Mult \ @4:Nat)\ @3:Nat))else @5:Mult /\(@1:Mult \ @4:Nat)fi else if @3:Nat C= @1:Mult then @3:Nat,(
    @5:Mult /\(@1:Mult \ @3:Nat))else @5:Mult /\ @1:Mult fi fi .
  cp MULTISET-ALGEBRA3291 for set22 and set22
    s([if @1:Nat ~ @2:Nat then mt else @1:Nat fi])
    = s([if @1:Nat ~ @2:Nat then mt else @2:Nat fi]).
  cp MULTISET-ALGEBRA3292 for set22 and set22
    s([if @1:Nat ~ @2:Nat then rem(@2:Nat,@3:Mult)else @1:Nat,rem(@2:Nat,@3:Mult)fi])
    = s([if @1:Nat ~ @2:Nat then rem(@1:Nat,@3:Mult)else @2:Nat,rem(@1:Nat,@3:Mult)fi]).
  cp MULTISET-ALGEBRA3306 for set18 and set18
    if @1:Nat ~ @3:Nat then if @1:Nat ~ @2:Nat then mt else @2:Nat fi else @3:Nat,if @1:Nat ~ @2:Nat then mt else @2:Nat fi fi
    = if @1:Nat ~ @2:Nat then if @1:Nat ~ @3:Nat then mt else @3:Nat fi else @2:Nat,if @1:Nat ~ @3:Nat then mt else @3:Nat fi fi .
  cp MULTISET-ALGEBRA3307 for set18 and set18
    if @1:Nat ~ @3:Nat then if @1:Nat ~ @2:Nat then rem(@1:Nat,@4:Mult)else @2:Nat,rem(@1:Nat,@4:Mult)fi else @3:Nat,if @1:Nat ~ @2:Nat then rem(@1:Nat,@4:Mult)else @2:Nat,rem(@1:Nat,@4:Mult)fi fi
    = if @1:Nat ~ @2:Nat then if @1:Nat ~ @3:Nat then rem(@1:Nat,@4:Mult)else @3:Nat,rem(@1:Nat,@4:Mult)fi else @2:Nat,if @1:Nat ~ @3:Nat then rem(@1:Nat,@4:Mult)else @3:Nat,rem(@1:Nat,@4:Mult)fi fi .
  cp MULTISET-ALGEBRA44 for set12 and set12
    @2:Nat C=(@1:Mult \ @3:Nat)and @3:Nat C= @1:Mult and @4:Nat C=((@1:Mult \ @3:Nat)\ @2:Nat)
    = @2:Nat C= @1:Mult and @3:Nat C=(@1:Mult \ @2:Nat)and @4:Nat C=((@1:Mult \ @2:Nat)\ @3:Nat).
  cp MULTISET-ALGEBRA45 for set12 and set12
    @2:Nat C=(@1:Mult \ @3:Nat)and @3:Nat C= @1:Mult and(@4:Nat,@5:Mult)C=((@1:Mult \ @3:Nat)\ @2:Nat)
    = @2:Nat C= @1:Mult and @3:Nat C=(@1:Mult \ @2:Nat)and(@4:Nat,@5:Mult)C=((@1:Mult \ @2:Nat)\ @3:Nat).
  cp MULTISET-ALGEBRA48 for set12 and set12
    @2:Nat C=(@1:Mult \ @4:Nat)and @3:Nat C=((@1:Mult \ @4:Nat)\ @2:Nat)and @4:Nat C= @1:Mult and @5:Nat C=(((@1:Mult \ @4:Nat)\ @2:Nat)\ @3:Nat)
    = @2:Nat C= @1:Mult and @3:Nat C=(@1:Mult \ @2:Nat)and @4:Nat C=((@1:Mult \ @2:Nat)\ @3:Nat)and @5:Nat C=(((@1:Mult \ @2:Nat)\ @3:Nat)\ @4:Nat).
  cp MULTISET-ALGEBRA49 for set12 and set12
    @2:Nat C=(@1:Mult \ @4:Nat)and @3:Nat C=((@1:Mult \ @4:Nat)\ @2:Nat)and @4:Nat C= @1:Mult and(@5:Nat,@6:Mult)C=(((@1:Mult \ @4:Nat)\ @2:Nat)\ @3:Nat)
    = @2:Nat C= @1:Mult and @3:Nat C=(@1:Mult \ @2:Nat)and @4:Nat C=((@1:Mult \ @2:Nat)\ @3:Nat)and(@5:Nat,@6:Mult)C=(((@1:Mult \ @2:Nat)\ @3:Nat)\ @4:Nat).
  cp MULTISET-ALGEBRA5 for set16 and set16
    if @3:Nat C= @1:Mult then @3:Nat,if @2:Nat C=(@1:Mult \ @3:Nat)then @2:Nat else mt fi else if @2:Nat C= @1:Mult then @2:Nat else mt fi fi
    = if @2:Nat C= @1:Mult then @2:Nat,if @3:Nat C=(@1:Mult \ @2:Nat)then @3:Nat else mt fi else if @3:Nat C= @1:Mult then @3:Nat else mt fi fi .
  cp MULTISET-ALGEBRA6 for set16 and set16
    if @3:Nat C= @1:Mult then @3:Nat,if @2:Nat C=(@1:Mult \ @3:Nat)then @2:Nat,(@4:Mult /\((@1:Mult \ @3:Nat)\ @2:Nat))else @4:Mult /\(@1:Mult \ @3:Nat)fi else if @2:Nat C= @1:Mult then @2:Nat,(@4:Mult /\(
    @1:Mult \ @2:Nat))else @4:Mult /\ @1:Mult fi fi
    = if @2:Nat C= @1:Mult then @2:Nat,if @3:Nat C=(@1:Mult \ @2:Nat)then @3:Nat,(@4:Mult /\((@1:Mult \ @2:Nat)\ @3:Nat))else @4:Mult /\(@1:Mult \ @2:Nat)fi else if @3:Nat C= @1:Mult then @3:Nat,(@4:Mult /\(
    @1:Mult \ @3:Nat))else @4:Mult /\ @1:Mult fi fi .
  cp MULTISET-ALGEBRA97 for set07 and set07
    if @1:Nat ~ @3:Nat then @2:Nat else @3:Nat,if @1:Nat ~ @2:Nat then mt else @2:Nat fi fi
    = if @1:Nat ~ @2:Nat then @3:Nat else @2:Nat,if @1:Nat ~ @3:Nat then mt else @3:Nat fi fi .
  cp MULTISET-ALGEBRA98 for set07 and set07
    if @1:Nat ~ @3:Nat then @2:Nat,@4:Mult else @3:Nat,if @1:Nat ~ @2:Nat then @4:Mult else @2:Nat,(@4:Mult \ @1:Nat)fi fi
    = if @1:Nat ~ @2:Nat then @3:Nat,@4:Mult else @2:Nat,if @1:Nat ~ @3:Nat then @4:Mult else @3:Nat,(@4:Mult \ @1:Nat)fi fi .
	The module is sort-decreasing.
