  load mbool.fm

 (fmod MNAT is
    pr MBOOL .
    sorts Nat NzNat Zero .
    subsorts Zero NzNat < Nat .
    op 0 : -> Zero .
    op s_ : Nat -> NzNat .
    op p_ : NzNat -> Nat .
    op _+_ : Nat Nat -> Nat [comm assoc] .
    op _*_ : Nat Nat -> Nat .
    op _*_ : NzNat NzNat -> NzNat .
    ops _>_ : Nat Nat -> Bool .
    op d : Nat Nat -> Nat [comm] .
    op quot : Nat NzNat -> Nat .
    op gcd : NzNat NzNat -> NzNat [comm] .
    vars N M : Nat .
    vars N' M' : NzNat .
    eq  [nat01] : p s N = N .
    eq  [nat02] : N + 0 = N .
    eq  [nat03] : (s N) + (s M) = s s (N + M) .
    eq  [nat04] : N * 0 = 0 .
    eq  [nat05] : 0 * N = 0 .
    eq  [nat06] : (s N) * (s M) = s (N + (M + (N * M))) .
    eq  [nat07] : 0 > M = false .
    eq  [nat08] : N' > 0 = true .
    eq  [nat09] : s N > s M = N > M .
    eq  [nat10] : d(0, N) = N .
    eq  [nat11] : d(s N, s M) = d(N, M) .
    ceq [nat12] : quot(N, M') = s quot(d(N, M'), M') if N > M' = true .
    eq  [nat13] : quot(M', M') = s 0 .
    ceq [nat14] : quot(N, M') = 0 if M' > N = true .
    eq  [nat15] : gcd(N', N') = N' .
    ceq [nat16] : gcd(N', M') =  gcd(d(N', M'), M') if N' > M' = true .
  endfm)

(select tool CRC .)
(check Church-Rosser .)

---(
crchc3f: rewrites: 4385595 in 8984ms cpu (9375ms real) (488129 rewrites/second)
crchc3g: rewrites: 1691305 in 3793ms cpu (4254ms real) (445844 rewrites/second)
crchc3h: rewrites: 2167604 in 5318ms cpu (6017ms real) (407572 rewrites/second)
crchc3p: rewrites: 4714087 in 3919ms cpu (4075ms real) (1202669 rewrites/second)

Church-Rosser check for MNAT
The following critical pairs must be proved joinable:
  cp MNAT71 for nat03 and nat03
    s s(M:Nat + s(N:Nat + #2:Nat))
    = s s(#2:Nat + s(N:Nat + M:Nat)).
  cp MNAT75 for nat03 and nat03
    #8:[Nat]+ s s(M:Nat + s(N:Nat + #2:Nat))
    = #8:[Nat]+ s s(#2:Nat + s(N:Nat + M:Nat)).
  ccp MNAT591 for nat15 and nat16
    M':NzNat
    = gcd(M':NzNat,d(M':NzNat,M':NzNat))
    if M':NzNat > M':NzNat = true .
  ccp MNAT626 for nat13 and nat14
    s 0
    = 0
    if M':NzNat > M':NzNat = true .
  ccp MNAT627 for nat13 and nat12
    s 0
    = s quot(d(M':NzNat,M':NzNat),M':NzNat)
    if M':NzNat > M':NzNat = true .
  ccp MNAT634 for nat16 and nat16
    gcd(N':NzNat,d(N':NzNat,M':NzNat))
    = gcd(M':NzNat,d(N':NzNat,M':NzNat))
    if N':NzNat > M':NzNat = true /\ M':NzNat > N':NzNat = true .
  ccp MNAT643 for nat14 and nat12
    0
    = s quot(d(N:Nat,M':NzNat),M':NzNat)
    if N:Nat > M':NzNat = true /\ M':NzNat > N:Nat = true .
  ccp MNAT650 for nat12 and nat14
    s quot(d(N:Nat,M':NzNat),M':NzNat)
    = 0
    if M':NzNat > N:Nat = true /\ N:Nat > M':NzNat = true .

The following proof obligations must be checked for sort-decreasingness:

  cma MNAT0 for equation nat16
    gcd(d(N':NzNat,M':NzNat),M':NzNat) : NzNat
    if N':NzNat > M':NzNat = true .
---)

 (fmod MNAT-2 is
    pr MNAT .
    eq M':NzNat > M':NzNat = false .
  endfm)

 (check Church-Rosser .)

---(
---)
