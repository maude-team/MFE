---(
ccp RAT-ACU7797 for RAT-ACU-01 and RAT-ACU-07
  -(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
  = - @1:NzInt / @2:NzNat
  if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
---)

fmod CJ is
  protecting RAT-ACU .

  op @2 : -> NzNat .
  ops @1 @3 : -> NzInt .
  vars I' J' K' : NzInt .
  vars M' N' : NzNat .
  vars I J : Int .

  ---- context
  eq gcd(@1, @2) > 1 = tt .
  ---- lemmas
  ----ceq gcd(- I', J') > 1 = tt if gcd(I', J') > 1 = tt .
  eq [INT-ACU-05']: gcd(- J', I') = gcd(J', I') .
  eq [INT-ACU-02']: quot(- I', M') = - quot(I', M') .
----  eq [RAT-ACU-07']: - (I / J) = - I / J .
----  eq [RAT-ACU-07]: - (I' / J') = - I' / J' .
  mb quot(I', gcd(N', I')) : NzInt .
  mb quot(M', gcd(I', M')) : NzNat .
endfm

red - @1 / @2 .
---- result [Rat]: - quot(@1, gcd(@2, @1)) / quot(@2, gcd(@2, @1))
red -(quot(@1,gcd(@2,@1))/ quot(@2,gcd(@2,@1))) .
---- result [Rat]: - quot(@1, gcd(@2, @1)) / quot(@2, gcd(@2, @1))

---(
    ccp RAT-ACU7798 for RAT-ACU-01 and RAT-ACU-09
      @3:NzInt *(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
      =(@1:NzInt * @3:NzInt)/ @2:NzNat
      if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
---)


fmod CJ is
  protecting RAT-ACU .

  op @2 : -> NzNat .
  ops @1 @3 : -> NzInt .
  vars I' J' K' : NzInt .
  vars M' N' : NzNat .

  eq gcd(@1, @2) > 1 = tt .
  ceq gcd(I' * J', K') > 1 = tt if gcd(I', K') > 1 = tt .
  mb quot(I', gcd(N', I')) : NzInt .
  mb quot(M', gcd(I', M')) : NzNat .
endfm

red @3 *(quot(@1,gcd(@2,@1))/ quot(@2,gcd(@2,@1))) .
---- result NzRat: (@3 * quot(@1, gcd(@2, @1))) / quot(@2, gcd(@2, @1))
red (@1 * @3)/ @2 .
---- result NzRat: quot(@1 * @3, gcd(@2, @1 * @3)) / quot(@2, gcd(@2, @1 * @3))

red (@3:NzInt * quot(@1:NzInt, gcd(@1:NzInt, @2:NzNat))) / quot(@2:NzNat, gcd(@1:NzInt, @2:NzNat)) .
red quot(@1:NzInt * @3:NzInt,gcd(@2:NzNat,@1:NzInt * @3:NzInt)/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt * @3:NzInt))) .

---- @3 -> 1
red (1 * quot(@1:NzInt, gcd(@1:NzInt, @2:NzNat))) / quot(@2:NzNat, gcd(@1:NzInt, @2:NzNat)) .
---- result NzRat: quot(@1:NzInt, gcd(@1:NzInt, @2:NzNat)) / quot(@2:NzNat, gcd(@1:NzInt, @2:NzNat))
red quot(@1:NzInt * 1,gcd(@2:NzNat,@1:NzInt * 1)) / quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt * 1)) .
---- result NzRat: quot(@1:NzInt, gcd(@1:NzInt, @2:NzNat)) / quot(@2:NzNat, gcd(@1:NzInt, @2:NzNat))

---- I.H. ....
fmod CJ is
  protecting RAT-ACU .

  op @2 : -> NzNat .
  ops @1 @3 : -> NzInt .
  vars I' J' K' : NzInt .
  vars M' N' : NzNat .

  eq [INT-ACU-07]: I' * - N' = - (N' * I') .
  eq [INT-ACU-05']: gcd(- J', I') = gcd(J', I') .
  eq [INT-ACU-02']: quot(- I', M') = - quot(I', M') .

  ---- I.H. ---- N:NzNat or I:NzInt ?
  eq (I:NzInt * quot(@1:NzInt, gcd(@1:NzInt, @2:NzNat))) / quot(@2:NzNat, gcd(@1:NzInt, @2:NzNat))
    = quot(@1:NzInt * I:NzInt,gcd(@2:NzNat,@1:NzInt * I:NzInt)) / quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt * I:NzInt)) .
endfm

---- @3 -> -_
red (- N:NzNat * quot(@1:NzInt, gcd(@1:NzInt, @2:NzNat))) / quot(@2:NzNat, gcd(@1:NzInt, @2:NzNat)) .
---- rewrites: 4 in 0ms cpu (0ms real) (~ rewrites/second)
---- result [Rat]: - quot(@1:NzInt * N:NzNat, gcd(@2:NzNat, @1:NzInt * N:NzNat)) / quot(@2:NzNat,
---- gcd(@2:NzNat, @1:NzInt * N:NzNat))
red quot(@1:NzInt * - N:NzNat, gcd(@2:NzNat, @1:NzInt * - N:NzNat)) / quot(@2:NzNat, gcd(@2:NzNat,
    @1:NzInt * - N:NzNat)) .
---- rewrites: 3 in 0ms cpu (0ms real) (250000 rewrites/second)
---- result [Rat]: - quot(@1:NzInt * N:NzNat, gcd(@2:NzNat, @1:NzInt * N:NzNat)) / quot(@2:NzNat,
---- gcd(@2:NzNat, @1:NzInt * N:NzNat))

---- @3 -> _+_

---(
  ccp RAT-ACU7832 for RAT-ACU-01 and RAT-ACU-09
    @3 *(quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))
    =(@1 * @3)/ @2
    if gcd(@1,@2)> 1 = tt .
---)
red @3 *(quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2))) .

red (@1 * @3)/ @2 .



eof
  ccp RAT-ACU7833 for RAT-ACU-01 and RAT-ACU-10
    (@3 / @4:NzNat)*(quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))
    =(@1 * @3)/ @2 * @4:NzNat
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7835 for RAT-ACU-01 and RAT-ACU-09
    @4:[Rat]* @3 *(quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))
    = @4:[Rat]*((@1 * @3)/ @2)
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7836 for RAT-ACU-01 and RAT-ACU-10
    @3:[Rat]*(@4:NzInt / @5:NzNat)*(quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,
    @2)))
    = @3:[Rat]*((@1 * @4:NzInt)/ @2 * @5:NzNat)
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7839 for RAT-ACU-01 and RAT-ACU-04
    @3:[Rat]+(@4:NzInt /(quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2))))
    = @3:[Rat]+((@4:NzInt * @2)/ @1)
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7841 for RAT-ACU-01 and RAT-ACU-05
    @3:[Rat]+((quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))/ @4:NzInt)
    = @3:[Rat]+(@1 / @4:NzInt * @2)
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7842 for RAT-ACU-01 and RAT-ACU-06
    @3:[Rat]+((quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))/(@4:NzInt /
    @5:NzNat))
    = @3:[Rat]+((@1 * @5:NzNat)/ @4:NzInt * @2)
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7843 for RAT-ACU-01 and RAT-ACU-06
    @3:[Rat]+((@4:NzInt / @5:NzNat)/(quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,
    @2))))
    = @3:[Rat]+((@4:NzInt * @2)/ @1 * @5:NzNat)
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7844 for RAT-ACU-01 and RAT-ACU-12
    @3:[Rat]+ max(@4:NzInt,quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))
    = @3:[Rat]+(max(@1,@4:NzInt * @2)/ @2)
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7845 for RAT-ACU-01 and RAT-ACU-13
    @3:[Rat]+ max(@4:NzInt / @5:NzNat,quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,
    @2)))
    = @3:[Rat]+(max(@1 * @5:NzNat,@4:NzInt * @2)/ @2 * @5:NzNat)
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7847 for RAT-ACU-01 and RAT-ACU-14
    @3:[Rat]+ min(@4:NzInt,quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))
    = @3:[Rat]+(min(@1,@4:NzInt * @2)/ @2)
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7848 for RAT-ACU-01 and RAT-ACU-15
    @3:[Rat]+ min(@4:NzInt / @5:NzNat,quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,
    @2)))
    = @3:[Rat]+(min(@1 * @5:NzNat,@4:NzInt * @2)/ @2 * @5:NzNat)
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7850 for RAT-ACU-01 and RAT-ACU-11
    @3:[Rat]+ | quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2))|
    = @3:[Rat]+(| @1 | / @2)
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7851 for RAT-ACU-01 and RAT-ACU-04
    @3 /(quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))
    =(@3 * @2)/ @1
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7853 for RAT-ACU-01 and RAT-ACU-05
    (quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))/ @3
    = @1 / @3 * @2
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7854 for RAT-ACU-01 and RAT-ACU-06
    (quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))/(@3 / @4:NzNat)
    =(@1 * @4:NzNat)/ @3 * @2
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7855 for RAT-ACU-01 and RAT-ACU-06
    (@3 / @4:NzNat)/(quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))
    =(@3 * @2)/ @1 * @4:NzNat
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7856 for RAT-ACU-01 and RAT-ACU-18
    @3 >(quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))
    =(@3 * @2)> @1
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7857 for RAT-ACU-01 and RAT-ACU-20
    (quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))> @3
    = @1 > @3 * @2
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7858 for RAT-ACU-01 and RAT-ACU-21
    (quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))>(@3 / @4:NzNat)
    =(@1 * @4:NzNat)> @3 * @2
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7859 for RAT-ACU-01 and RAT-ACU-21
    (@3 / @4:NzNat)>(quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))
    =(@3 * @2)> @1 * @4:NzNat
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7860 for RAT-ACU-01 and RAT-ACU-16
    @3 ~(quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))
    = @1 ~ @3 * @2
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7861 for RAT-ACU-01 and RAT-ACU-17
    (@3 / @4:NzNat)~(quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))
    =(@1 * @4:NzNat)~ @3 * @2
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7863 for RAT-ACU-01 and RAT-ACU-12
    max(@3,quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))
    = max(@1,@3 * @2)/ @2
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7864 for RAT-ACU-01 and RAT-ACU-13
    max(@3 / @4:NzNat,quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))
    = max(@1 * @4:NzNat,@3 * @2)/ @2 * @4:NzNat
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7866 for RAT-ACU-01 and RAT-ACU-14
    min(@3,quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))
    = min(@1,@3 * @2)/ @2
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7867 for RAT-ACU-01 and RAT-ACU-15
    min(@3 / @4:NzNat,quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2)))
    = min(@1 * @4:NzNat,@3 * @2)/ @2 * @4:NzNat
    if gcd(@1,@2)> 1 = tt .
  ccp RAT-ACU7869 for RAT-ACU-01 and RAT-ACU-11
    | quot(@1,gcd(@1,@2))/ quot(@2,gcd(@1,@2))|
    = | @1 | / @2
    if gcd(@1,@2)> 1 = tt .
