----  cp RAT-ACU6324 for RAT-ACU-03 and RAT-ACU-08
----    @2:[Rat]+ - 1 / @3:NzInt
----    = @2:[Rat]+ - @1:NzNat / @1:NzNat * @3:NzInt .
----
----  By the Ctx rule it suffices to prove:
----  - 1 / @3:NzInt
----    = - @1:NzNat / @1:NzNat * @3:NzInt
----
----  - 1 / X3 \|/ - X1 / (X1 * X3)

mod RAT-ACU6324 is
  pr RAT-ACU-R .

  vars I J : Int .
  vars X1 N' M' : NzNat .
  vars X3 I' J' : NzInt .

  rl gcd(N', N' * I') => N' .
  rl gcd(- J', I') => gcd(J', I') .
  rl quot(I' * I, I') => I .
  rl 1 + N' > 1 => true .
  rl - (I' * J') => - I' * J' .
endm

---- search [1] in RAT-ACU6324 : join(- 1 / X3, - X1 / (X1 * X3)) =>* tt .

---- Ctor cases on X1: {1, 1 + N':NzNat}

search [1] in RAT-ACU6324 : join(- 1 / X3, - 1 / (1 * X3)) =>* tt .
search [1] in RAT-ACU6324 : join(- 1 / X3, - (1 + N') / ((1 + N') * X3)) =>* tt .
