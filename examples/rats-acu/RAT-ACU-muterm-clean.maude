fmod NAT-FVP is
sort Nat  .
op 0 : -> Nat .
op 1 : -> Nat .
op _+_ : Nat Nat -> Nat [assoc comm] .
var N : Nat .
eq 0 + N = N .
endfm

op _>_ : Nat Nat -> Bool .
eq 0 > M = false .
eq O > 0 = true .
eq N > N = false .
eq N > N + M = false .
eq (1 + M) > 0 = true .
eq (1 + N) > N = true .
eq (1 + N + M)> N = true .

ops p s : Nat -> Nat .
op leq : Nat Nat -> Bool .
op minus : Nat Nat -> Nat .
op plus : Nat Nat -> Nat .
op if : Bool Nat Nat -> Nat [strat(1 0)].
vars X : Natk .
vars M N : Nat .
eq if(true, N, M) = N .
eq if(false, N, M) = M .
eq p(s(N)) = N .
eq leq(0, N) = true .
eq leq(s(M), 0) = false .
eq leq(s(M), s(N)) = leq(M, N) .
eq minus(M, N) = if(leq(M, N), 0, s(minus(p(M), N))) .
eq plus(X, 0) = X .
eq plus(0, X) = X .
eq plus(s(N), s(M)) = s(s(plus(N, M))) .
endfm


fmod NAT-FVP is
  sorts Bool Nat NzNat Zero Natk .
  subsort NzNat < Nat < Natk .
  subsort Zero < Nat .
  op 0 : -> Zero .
  op 1 : -> NzNat .
  op _>_ : Nat Nat -> Bool .
  op _\_ : Nat Nat -> Nat .
  op _~_ : Nat Nat -> Bool .
  op d : Nat Nat -> Nat .
  op false : -> Bool .
  op p : NzNat -> Nat .
  op true : -> Bool .
  op _+_ : Nat Nat -> Nat [assoc comm] .
  op _+_ : NzNat NzNat -> NzNat [assoc comm] .
  vars X : Natk .
  vars O P : NzNat .
  vars N M : Nat .
  eq 0 + X = X .
  eq X + (0 \ M) = X .
  eq X + (M \ 0) = M + X .
  eq X + (N \ N) = X .
  eq X + (N \ N + M) = X .
  eq X + ((N + M)\ N) = M + X .
  eq X + d(0,M) = M + X .
  eq X + d(M,0) = M + X .
  eq X + d(N,N) = X .
  eq X + d(N,N + M) = M + X .
  eq X + d(N + M,N) = M + X .
  eq X + p(1) = X .
  eq X + p(1 + N) = N + X .
  eq 0 > M = false .
  eq O > 0 = true .
  eq N > N = false .
  eq N > N + M = false .
  eq (1 + M) > 0 = true .
  eq (1 + N) > N = true .
  eq (1 + N + M)> N = true .
  eq 0 \ M = 0 .
  eq M \ 0 = M .
  eq N \ N = 0 .
  eq N \ N + M = 0 .
  eq (N + M)\ N = M .
  eq 0 ~ P = false .
  eq P ~ 0 = false .
  eq N ~ N = true .
  eq N ~ N + P = false .
  eq (N + P)~ N = false .
  eq d(0,M) = M .
  eq d(M,0) = M .
  eq d(N,N) = 0 .
  eq d(N,N + M) = M .
  eq d(N + M,N) = M .
  eq p(1) = 0 .
  eq p(1 + N) = N .
endfm
