MacBook-Pro-de-Paco:MFE duran$ ~/Maude/Alpha115/maude-Yices2.darwin64 examples/rats-acu/numbers-ACU-UIUC.maude src/mfe.maude
		     \||||||||||||||||||/
		   --- Welcome to Maude ---
		     /||||||||||||||||||\
	   Maude alpha115 built: Aug 11 2017 19:57:09
	    Copyright 1997-2017 SRI International
		   Wed Aug  8 11:53:23 2018

	    Full Maude 2.7e September 22th 2016

The Maude Formal Environment 1.0c
    Inductive Theorem Prover - July 20th 2010
    Sufficient Completeness Checker 2a - August 2010
    Church-Rosser Checker 3r - August 6th 2019
    Coherence Checker 3q - November 20th 2017
    Maude Termination Tool 1.5j - August 11th 2014

set include BOOL off

set include TRUTH-VALUE on

Maude> (select tool CRC .)
rewrites: 76 in 0ms cpu (1ms real) (94881 rewrites/second)
The CRC has been set as current tool.

Maude> (ccr NAT-ACU .)
rewrites: 51914854 in 45059ms cpu (47338ms real) (1152129 rewrites/second)
Church-Rosser check for NAT-ACU
	All critical pairs have been joined.
	The specification is locally-confluent.
	The module is sort-decreasing.

Maude> (ccr INT-ACU .)
rewrites: 78776481 in 87855ms cpu (91329ms real) (896664 rewrites/second)
Church-Rosser check for INT-ACU
	All critical pairs have been joined.
	The specification is locally-confluent.
	The module is sort-decreasing.

Maude> (ccr RAT-ACU .)
rewrites: 117100665 in 236058ms cpu (243525ms real) (496067 rewrites/second)
Church-Rosser check for RAT-ACU
The following critical pairs must be proved joinable:
  ccp RAT-ACU25994 for rat-acu01 and rat-acu02
    X@@@:[Rat]+(quot(#2:NzInt,gcd(1,#2:NzInt))/ quot(1,gcd(1,#2:NzInt)))
    = X@@@:[Rat]+ #2:NzInt
    if gcd(1,#2:NzInt)> 1 = tt .

The following proof obligations must be checked for sort-decreasingness:

  cma RAT-ACU0 for equation rat-acu01
    X@@@@Int:Int +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU1 for equation rat-acu01
    X@@@@Int:Int +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : Rat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU10 for equation rat-acu01
    X@@@@NzNat:NzNat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : PosRat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU11 for equation rat-acu01
    X@@@@NzNat:NzNat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU12 for equation rat-acu01
    X@@@@NzNeg:NzNeg +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU13 for equation rat-acu01
    X@@@@NzNeg:NzNeg +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : Rat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU14 for equation rat-acu01
    X@@@@NzNeg:NzNeg +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU15 for equation rat-acu01
    X@@@@NzPosRat:NzPosRat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) :
    Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU16 for equation rat-acu01
    X@@@@NzPosRat:NzPosRat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(
    J'@NzNat:NzNat,M':NzNat))) : PosRat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU17 for equation rat-acu01
    X@@@@NzPosRat:NzPosRat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(
    J'@NzNeg:NzNeg,M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU18 for equation rat-acu01
    X@@@@NzRat:NzRat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU19 for equation rat-acu01
    X@@@@NzRat:NzRat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : Rat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU2 for equation rat-acu01
    X@@@@Int:Int +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU20 for equation rat-acu01
    X@@@@NzRat:NzRat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU21 for equation rat-acu01
    X@@@@PosRat:PosRat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU22 for equation rat-acu01
    X@@@@PosRat:PosRat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : PosRat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU23 for equation rat-acu01
    X@@@@PosRat:PosRat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU24 for equation rat-acu01
    X@@@@Rat:Rat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU25 for equation rat-acu01
    X@@@@Rat:Rat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : Rat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU26 for equation rat-acu01
    X@@@@Rat:Rat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU27 for equation rat-acu01
    X@@@@Zero:Zero +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU28 for equation rat-acu01
    X@@@@Zero:Zero +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : PosRat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU29 for equation rat-acu01
    X@@@@Zero:Zero +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU3 for equation rat-acu01
    X@@@@Nat:Nat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU4 for equation rat-acu01
    X@@@@Nat:Nat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : PosRat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU5 for equation rat-acu01
    X@@@@Nat:Nat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU6 for equation rat-acu01
    X@@@@NzInt:NzInt +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU7 for equation rat-acu01
    X@@@@NzInt:NzInt +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : Rat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU8 for equation rat-acu01
    X@@@@NzInt:NzInt +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU9 for equation rat-acu01
    X@@@@NzNat:NzNat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

Maude>
