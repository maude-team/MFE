MacBook-Pro-de-Paco:MFE duran$ examples/rats-acu/run
examples/rats-acu/run: line 2: fg: no job control
		     \||||||||||||||||||/
		   --- Welcome to Maude ---
		     /||||||||||||||||||\
	   Maude alpha115 built: Aug 11 2017 19:57:09
	    Copyright 1997-2017 SRI International
		   Wed Sep 19 14:47:31 2018

	    Full Maude 2.7f November 20th 2017

The Maude Formal Environment 1.0c
    Inductive Theorem Prover - July 20th 2010
    Sufficient Completeness Checker 2a - August 2010
    Church-Rosser Checker 3r - August 6th 2018
    Coherence Checker 3r - December 12th 2017
    Maude Termination Tool 1.5j - August 11th 2014

set include BOOL off

set include TRUTH-VALUE on

rewrites: 76 in 0ms cpu (0ms real) (~ rewrites/second)
The CRC has been set as current tool.

rewrites: 5230 in 14ms cpu (15ms real) (364180 rewrites/second)
Church-Rosser check for BOOL-FVP
	All critical pairs have been joined.
	The specification is locally-confluent.
	The module is sort-decreasing.

rewrites: 707307 in 1410ms cpu (1528ms real) (501362 rewrites/second)
Church-Rosser check for NAT-FVP
	All critical pairs have been joined.
	The specification is locally-confluent.
	The module is sort-decreasing.

rewrites: 1323083 in 3022ms cpu (3270ms real) (437775 rewrites/second)
Church-Rosser check for NAT-ACU
	All critical pairs have been joined.
	The specification is locally-confluent.
	The module is sort-decreasing.

rewrites: 1326273 in 3579ms cpu (3930ms real) (370546 rewrites/second)
Church-Rosser check for INT-FVP
	All critical pairs have been joined.
	The specification is locally-confluent.
	The module is sort-decreasing.

rewrites: 2724874 in 8527ms cpu (9359ms real) (319522 rewrites/second)
Church-Rosser check for INT-ACU
	All critical pairs have been joined.
	The specification is locally-confluent.
	The module is sort-decreasing.

rewrites: 6955558 in 114627ms cpu (118411ms real) (60679 rewrites/second)
Church-Rosser check for RAT-ACU
The following critical pairs must be proved joinable:
  ccp RAT-ACU1398 for RAT-ACU-02 and RAT-ACU-01
    @1:NzInt + @2:[Rat]
    = @2:[Rat]+(quot(@1:NzInt,gcd(1,@1:NzInt))/ quot(1,gcd(1,@1:NzInt)))
    if gcd(1,@1:NzInt)> 1 = tt .
  ccp RAT-ACU7530 for RAT-ACU-02 and RAT-ACU-01
    @1:NzInt
    = quot(@1:NzInt,gcd(1,@1:NzInt))/ quot(1,gcd(1,@1:NzInt))
    if gcd(1,@1:NzInt)> 1 = tt .
  ccp RAT-ACU7797 for RAT-ACU-01 and RAT-ACU-07
    -(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = - @1:NzInt / @2:NzNat
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7798 for RAT-ACU-01 and RAT-ACU-09
    @3:NzInt *(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    =(@1:NzInt * @3:NzInt)/ @2:NzNat
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7799 for RAT-ACU-01 and RAT-ACU-10
    (@3:NzInt / @4:NzNat)*(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    =(@1:NzInt * @3:NzInt)/ @2:NzNat * @4:NzNat
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7801 for RAT-ACU-01 and RAT-ACU-09
    @3:NzInt * @4:[Rat]*(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = @4:[Rat]*((@1:NzInt * @3:NzInt)/ @2:NzNat)
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7802 for RAT-ACU-01 and RAT-ACU-10
    @3:[Rat]*(@4:NzInt / @5:NzNat)*(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,
    @1:NzInt)))
    = @3:[Rat]*((@1:NzInt * @4:NzInt)/ @2:NzNat * @5:NzNat)
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7804 for RAT-ACU-01 and RAT-ACU-07
    @3:[Rat]+ -(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = @3:[Rat]+(- @1:NzInt / @2:NzNat)
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7805 for RAT-ACU-01 and RAT-ACU-04
    @3:[Rat]+(@4:NzInt /(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt))))
    = @3:[Rat]+((@2:NzNat * @4:NzInt)/ @1:NzInt)
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7807 for RAT-ACU-01 and RAT-ACU-05
    @3:[Rat]+((quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))/ @4:NzInt)
    = @3:[Rat]+(@1:NzInt / @2:NzNat * @4:NzInt)
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7808 for RAT-ACU-01 and RAT-ACU-06
    @3:[Rat]+((quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))/(@4:NzInt /
    @5:NzNat))
    = @3:[Rat]+((@5:NzNat * @1:NzInt)/ @2:NzNat * @4:NzInt)
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7809 for RAT-ACU-01 and RAT-ACU-06
    @3:[Rat]+((@4:NzInt / @5:NzNat)/(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,
    @1:NzInt))))
    = @3:[Rat]+((@2:NzNat * @4:NzInt)/ @5:NzNat * @1:NzInt)
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7810 for RAT-ACU-01 and RAT-ACU-12
    @3:[Rat]+ max(@4:NzInt,quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = @3:[Rat]+(max(@1:NzInt,@2:NzNat * @4:NzInt)/ @2:NzNat)
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7811 for RAT-ACU-01 and RAT-ACU-13
    @3:[Rat]+ max(@4:NzInt / @5:NzNat,quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,
    @1:NzInt)))
    = @3:[Rat]+(max(@2:NzNat * @4:NzInt,@5:NzNat * @1:NzInt)/ @2:NzNat * @5:NzNat)
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7813 for RAT-ACU-01 and RAT-ACU-14
    @3:[Rat]+ min(@4:NzInt,quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = @3:[Rat]+(min(@1:NzInt,@2:NzNat * @4:NzInt)/ @2:NzNat)
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7814 for RAT-ACU-01 and RAT-ACU-15
    @3:[Rat]+ min(@4:NzInt / @5:NzNat,quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,
    @1:NzInt)))
    = @3:[Rat]+(min(@2:NzNat * @4:NzInt,@5:NzNat * @1:NzInt)/ @2:NzNat * @5:NzNat)
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7816 for RAT-ACU-01 and RAT-ACU-11
    @3:[Rat]+ | quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt))|
    = @3:[Rat]+(| @1:NzInt | / @2:NzNat)
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7817 for RAT-ACU-01 and RAT-ACU-04
    @3:NzInt /(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    =(@2:NzNat * @3:NzInt)/ @1:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7819 for RAT-ACU-01 and RAT-ACU-05
    (quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))/ @3:NzInt
    = @1:NzInt / @2:NzNat * @3:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7820 for RAT-ACU-01 and RAT-ACU-06
    (quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))/(@3:NzInt / @4:NzNat)
    =(@4:NzNat * @1:NzInt)/ @2:NzNat * @3:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7821 for RAT-ACU-01 and RAT-ACU-06
    (@3:NzInt / @4:NzNat)/(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    =(@2:NzNat * @3:NzInt)/ @4:NzNat * @1:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7822 for RAT-ACU-01 and RAT-ACU-18
    @3:NzInt >(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    =(@2:NzNat * @3:NzInt)> @1:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7823 for RAT-ACU-01 and RAT-ACU-20
    (quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))> @3:NzInt
    = @1:NzInt > @2:NzNat * @3:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7824 for RAT-ACU-01 and RAT-ACU-21
    (quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))>(@3:NzInt / @4:NzNat)
    =(@4:NzNat * @1:NzInt)> @2:NzNat * @3:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7825 for RAT-ACU-01 and RAT-ACU-21
    (@3:NzInt / @4:NzNat)>(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    =(@2:NzNat * @3:NzInt)> @4:NzNat * @1:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7826 for RAT-ACU-01 and RAT-ACU-16
    @3:NzInt ~(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = @1:NzInt ~ @2:NzNat * @3:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7827 for RAT-ACU-01 and RAT-ACU-17
    (@3:NzInt / @4:NzNat)~(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    =(@2:NzNat * @3:NzInt)~ @4:NzNat * @1:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7829 for RAT-ACU-01 and RAT-ACU-12
    max(@3:NzInt,quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = max(@1:NzInt,@2:NzNat * @3:NzInt)/ @2:NzNat
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7830 for RAT-ACU-01 and RAT-ACU-13
    max(@3:NzInt / @4:NzNat,quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = max(@2:NzNat * @3:NzInt,@4:NzNat * @1:NzInt)/ @2:NzNat * @4:NzNat
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7832 for RAT-ACU-01 and RAT-ACU-14
    min(@3:NzInt,quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = min(@1:NzInt,@2:NzNat * @3:NzInt)/ @2:NzNat
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7833 for RAT-ACU-01 and RAT-ACU-15
    min(@3:NzInt / @4:NzNat,quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = min(@2:NzNat * @3:NzInt,@4:NzNat * @1:NzInt)/ @2:NzNat * @4:NzNat
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .
  ccp RAT-ACU7835 for RAT-ACU-01 and RAT-ACU-11
    | quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt))|
    = | @1:NzInt | / @2:NzNat
    if gcd(@1:NzInt,@2:NzNat)> 1 = tt .

The following proof obligations must be checked for sort-decreasingness:

  cma RAT-ACU0 for equation RAT-ACU-01
    X@@@@Int:Int +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU1 for equation RAT-ACU-01
    X@@@@Int:Int +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : Rat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU10 for equation RAT-ACU-01
    X@@@@NzNat:NzNat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : PosRat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU11 for equation RAT-ACU-01
    X@@@@NzNat:NzNat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU12 for equation RAT-ACU-01
    X@@@@NzNeg:NzNeg +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU13 for equation RAT-ACU-01
    X@@@@NzNeg:NzNeg +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : Rat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU14 for equation RAT-ACU-01
    X@@@@NzNeg:NzNeg +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU15 for equation RAT-ACU-01
    X@@@@NzPosRat:NzPosRat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) :
    Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU16 for equation RAT-ACU-01
    X@@@@NzPosRat:NzPosRat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(
    J'@NzNat:NzNat,M':NzNat))) : PosRat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU17 for equation RAT-ACU-01
    X@@@@NzPosRat:NzPosRat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(
    J'@NzNeg:NzNeg,M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU18 for equation RAT-ACU-01
    X@@@@NzRat:NzRat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU19 for equation RAT-ACU-01
    X@@@@NzRat:NzRat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : Rat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU2 for equation RAT-ACU-01
    X@@@@Int:Int +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU20 for equation RAT-ACU-01
    X@@@@NzRat:NzRat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU21 for equation RAT-ACU-01
    X@@@@PosRat:PosRat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU22 for equation RAT-ACU-01
    X@@@@PosRat:PosRat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : PosRat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU23 for equation RAT-ACU-01
    X@@@@PosRat:PosRat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU24 for equation RAT-ACU-01
    X@@@@Rat:Rat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU25 for equation RAT-ACU-01
    X@@@@Rat:Rat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : Rat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU26 for equation RAT-ACU-01
    X@@@@Rat:Rat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU27 for equation RAT-ACU-01
    X@@@@Zero:Zero +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU28 for equation RAT-ACU-01
    X@@@@Zero:Zero +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : PosRat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU29 for equation RAT-ACU-01
    X@@@@Zero:Zero +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU3 for equation RAT-ACU-01
    X@@@@Nat:Nat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU30 for equation RAT-ACU-01
    quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat)) : NzRat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU31 for equation RAT-ACU-01
    quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,M':NzNat)) : NzPosRat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU32 for equation RAT-ACU-01
    quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,M':NzNat)) : NzRat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU4 for equation RAT-ACU-01
    X@@@@Nat:Nat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : PosRat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU5 for equation RAT-ACU-01
    X@@@@Nat:Nat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU6 for equation RAT-ACU-01
    X@@@@NzInt:NzInt +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

  cma RAT-ACU7 for equation RAT-ACU-01
    X@@@@NzInt:NzInt +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,
    M':NzNat))) : Rat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = tt .

  cma RAT-ACU8 for equation RAT-ACU-01
    X@@@@NzInt:NzInt +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,
    M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = tt .

  cma RAT-ACU9 for equation RAT-ACU-01
    X@@@@NzNat:NzNat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = tt .

Maude>
