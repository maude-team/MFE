MacBook-Pro-de-Paco:MFE duran$ examples/rats-acu/run
examples/rats-acu/run: line 2: fg: no job control
		     \||||||||||||||||||/
		   --- Welcome to Maude ---
		     /||||||||||||||||||\
	   Maude alpha115 built: Aug 11 2017 19:57:09
	    Copyright 1997-2017 SRI International
		   Thu Oct  4 10:04:15 2018

	    Full Maude 2.7f November 20th 2017

The Maude Formal Environment 1.0c
    Inductive Theorem Prover - July 20th 2010
    Sufficient Completeness Checker 2a - August 2010
    Church-Rosser Checker 3r - August 6th 2018
    Coherence Checker 3r - December 12th 2017
    Maude Termination Tool 1.5j - August 11th 2014

set include BOOL off

set include TRUTH-VALUE on

rewrites: 76 in 0ms cpu (0ms real) (173913 rewrites/second)
The CRC has been set as current tool.

rewrites: 9095948 in 196681ms cpu (201765ms real) (46247 rewrites/second)
Church-Rosser check for RAT-ACU
The following critical pairs must be proved joinable:
  cp RAT-ACU5213 for INT-FVP-10 and RAT-ACU-08
    (@3:NzInt + @4:NzNat * @5:NzInt + - @2:NzNat)/ @4:NzNat
    =(@3:NzInt + -(@2:NzNat * @4:NzNat)+ @4:NzNat * @5:NzInt)/ @4:NzNat .
  cp RAT-ACU5216 for INT-FVP-10 and RAT-ACU-08
    @5:[Rat]+((@3:NzInt + @4:NzNat * @6:NzInt + - @2:NzNat)/ @4:NzNat)
    = @5:[Rat]+((@3:NzInt + -(@2:NzNat * @4:NzNat)+ @4:NzNat * @6:NzInt)/ @4:NzNat).
  cp RAT-ACU5217 for INT-FVP-10 and RAT-ACU-09
    ((@4:NzNat * @5:NzInt)+ @6:NzNat * @3:NzInt + -(@2:NzNat * @4:NzNat))/ @4:NzNat * @6:NzNat
    =(-(@2:NzNat * @4:NzNat * @6:NzNat)+(@4:NzNat * @5:NzInt)+ @6:NzNat * @3:NzInt)/ @4:NzNat * @6:NzNat .
  cp RAT-ACU5218 for INT-FVP-10 and RAT-ACU-09
    @7:[Rat]+(((@4:NzNat * @5:NzInt)+ @6:NzNat * @3:NzInt + -(@2:NzNat * @4:NzNat))/ @4:NzNat * @6:NzNat)
    = @7:[Rat]+((-(@2:NzNat * @4:NzNat * @6:NzNat)+(@4:NzNat * @5:NzInt)+ @6:NzNat * @3:NzInt)/ @4:NzNat * @6:NzNat).
  cp RAT-ACU5734 for INT-FVP-05 and RAT-ACU-08
    (@1:NzInt + @2:NzNat * @3:NzInt + - 1)/ @2:NzNat
    =(@1:NzInt + - @2:NzNat + @2:NzNat * @3:NzInt)/ @2:NzNat .
  cp RAT-ACU5735 for INT-FVP-05 and RAT-ACU-08
    @3:[Rat]+((@1:NzInt + @2:NzNat * @4:NzInt + - 1)/ @2:NzNat)
    = @3:[Rat]+((@1:NzInt + - @2:NzNat + @2:NzNat * @4:NzInt)/ @2:NzNat).
  cp RAT-ACU5736 for INT-FVP-05 and RAT-ACU-09
    ((@2:NzNat * @3:NzInt)+ @4:NzNat * @1:NzInt + - @2:NzNat)/ @2:NzNat * @4:NzNat
    =(-(@2:NzNat * @4:NzNat)+(@2:NzNat * @3:NzInt)+ @4:NzNat * @1:NzInt)/ @2:NzNat * @4:NzNat .
  cp RAT-ACU5737 for INT-FVP-05 and RAT-ACU-09
    @5:[Rat]+(((@2:NzNat * @3:NzInt)+ @4:NzNat * @1:NzInt + - @2:NzNat)/ @2:NzNat * @4:NzNat)
    = @5:[Rat]+((-(@2:NzNat * @4:NzNat)+(@2:NzNat * @3:NzInt)+ @4:NzNat * @1:NzInt)/ @2:NzNat * @4:NzNat).
  cp RAT-ACU6004 for INT-FVP-06 and RAT-ACU-08
    (@2:NzInt + @3:NzNat * @4:NzInt + -(1 + @1:NzNat))/ @3:NzNat
    =(@2:NzInt + -(@3:NzNat + @1:NzNat * @3:NzNat)+ @3:NzNat * @4:NzInt)/ @3:NzNat .
  cp RAT-ACU6005 for INT-FVP-06 and RAT-ACU-08
    @4:[Rat]+((@2:NzInt + @3:NzNat * @5:NzInt + -(1 + @1:NzNat))/ @3:NzNat)
    = @4:[Rat]+((@2:NzInt + -(@3:NzNat + @1:NzNat * @3:NzNat)+ @3:NzNat * @5:NzInt)/ @3:NzNat).
  cp RAT-ACU6006 for INT-FVP-06 and RAT-ACU-09
    ((@3:NzNat * @4:NzInt)+ @5:NzNat * @2:NzInt + -(@3:NzNat + @1:NzNat * @3:NzNat))/ @3:NzNat * @5:NzNat
    =(-((@3:NzNat * @5:NzNat)+ @1:NzNat * @3:NzNat * @5:NzNat)+(@3:NzNat * @4:NzInt)+ @5:NzNat * @2:NzInt)/ @3:NzNat * @5:NzNat .
  cp RAT-ACU6007 for INT-FVP-06 and RAT-ACU-09
    @6:[Rat]+(((@3:NzNat * @4:NzInt)+ @5:NzNat * @2:NzInt + -(@3:NzNat + @1:NzNat * @3:NzNat))/ @3:NzNat * @5:NzNat)
    = @6:[Rat]+((-((@3:NzNat * @5:NzNat)+ @1:NzNat * @3:NzNat * @5:NzNat)+(@3:NzNat * @4:NzInt)+ @5:NzNat * @2:NzInt)/ @3:NzNat * @5:NzNat).
  cp RAT-ACU6572 for NAT-ACU-02 and RAT-ACU-08
    (@2:NzInt + @3:NzNat * 1 + @4:NzInt)/ @3:NzNat
    =(@3:NzNat + @2:NzInt + @3:NzNat * @4:NzInt)/ @3:NzNat .
  cp RAT-ACU6573 for NAT-ACU-02 and RAT-ACU-08
    @4:[Rat]+((@2:NzInt + @3:NzNat * 1 + @5:NzInt)/ @3:NzNat)
    = @4:[Rat]+((@3:NzNat + @2:NzInt + @3:NzNat * @5:NzInt)/ @3:NzNat).
  cp RAT-ACU6574 for NAT-ACU-02 and RAT-ACU-09
    ((@3:NzNat * @4:NzInt)+ @5:NzNat * @3:NzNat + @2:NzInt)/ @3:NzNat * @5:NzNat
    =((@3:NzNat * @5:NzNat)+(@3:NzNat * @4:NzInt)+ @5:NzNat * @2:NzInt)/ @3:NzNat * @5:NzNat .
  cp RAT-ACU6575 for NAT-ACU-02 and RAT-ACU-09
    @6:[Rat]+(((@3:NzNat * @4:NzInt)+ @5:NzNat * @3:NzNat + @2:NzInt)/ @3:NzNat * @5:NzNat)
    = @6:[Rat]+(((@3:NzNat * @5:NzNat)+(@3:NzNat * @4:NzInt)+ @5:NzNat * @2:NzInt)/ @3:NzNat * @5:NzNat).
  cp RAT-ACU7777 for RAT-ACU-08 and RAT-ACU-08
    (@1:NzInt +(@2:NzNat * @3:NzInt)+ @2:NzNat * @4:NzInt)/ @2:NzNat
    =(@1:NzInt + @2:NzNat * @3:NzInt + @4:NzInt)/ @2:NzNat .
  cp RAT-ACU7906 for RAT-ACU-08 and RAT-ACU-08
    @5:[Rat]+((@1:NzInt + @2:NzNat * @3:NzInt + @4:NzInt)/ @2:NzNat)
    = @5:[Rat]+((@1:NzInt +(@2:NzNat * @3:NzInt)+ @2:NzNat * @4:NzInt)/ @2:NzNat).
  cp RAT-ACU7908 for RAT-ACU-08 and RAT-ACU-08
    ((@2:NzNat * @3:NzInt)+ @4:NzNat * @1:NzInt + @2:NzNat * @5:NzInt)/ @2:NzNat * @4:NzNat
    =((@2:NzNat * @3:NzInt + @4:NzNat * @5:NzInt)+ @4:NzNat * @1:NzInt)/ @2:NzNat * @4:NzNat .
  cp RAT-ACU7915 for RAT-ACU-08 and RAT-ACU-08
    @6:[Rat]+(((@2:NzNat * @3:NzInt)+ @4:NzNat * @1:NzInt + @2:NzNat * @5:NzInt)/ @2:NzNat * @4:NzNat)
    = @6:[Rat]+(((@2:NzNat * @3:NzInt + @4:NzNat * @5:NzInt)+ @4:NzNat * @1:NzInt)/ @2:NzNat * @4:NzNat).
  cp RAT-ACU7920 for RAT-ACU-08 and RAT-ACU-09
    ((@2:NzNat * @3:NzInt + @4:NzNat * @5:NzInt)+ @4:NzNat * @1:NzInt)/ @2:NzNat * @4:NzNat
    =((@2:NzNat * @3:NzInt)+(@4:NzNat * @1:NzInt)+ @2:NzNat * @4:NzNat * @5:NzInt)/ @2:NzNat * @4:NzNat .
  cp RAT-ACU7922 for RAT-ACU-08 and RAT-ACU-09
    @6:[Rat]+(((@2:NzNat * @3:NzInt + @4:NzNat * @5:NzInt)+ @4:NzNat * @1:NzInt)/ @2:NzNat * @4:NzNat)
    = @6:[Rat]+(((@2:NzNat * @3:NzInt)+(@4:NzNat * @1:NzInt)+ @2:NzNat * @4:NzNat * @5:NzInt)/ @2:NzNat * @4:NzNat).
  cp RAT-ACU8033 for RAT-ACU-09 and RAT-ACU-09
    ((@4:NzNat *(@2:NzNat * @5:NzInt)+ @6:NzNat * @1:NzInt)+ @2:NzNat * @6:NzNat * @3:NzInt)/ @2:NzNat * @4:NzNat * @6:NzNat
    =((@2:NzNat *(@4:NzNat * @5:NzInt)+ @6:NzNat * @3:NzInt)+ @4:NzNat * @6:NzNat * @1:NzInt)/ @2:NzNat * @4:NzNat * @6:NzNat .
  cp RAT-ACU8035 for RAT-ACU-09 and RAT-ACU-09
    @7:[Rat]+(((@4:NzNat *(@2:NzNat * @5:NzInt)+ @6:NzNat * @1:NzInt)+ @2:NzNat * @6:NzNat * @3:NzInt)/ @2:NzNat * @4:NzNat * @6:NzNat)
    = @7:[Rat]+(((@2:NzNat *(@4:NzNat * @5:NzInt)+ @6:NzNat * @3:NzInt)+ @4:NzNat * @6:NzNat * @1:NzInt)/ @2:NzNat * @4:NzNat * @6:NzNat).
  ccp RAT-ACU1146 for RAT-ACU-07 and RAT-ACU-01
    @5:[Rat]+(((@2:NzNat * @3:NzInt)+ @4:NzNat * - @1:NzInt)/ @2:NzNat * @4:NzNat)
    = @5:[Rat]+(- @1:NzInt / @2:NzNat)+(quot(@3:NzInt,gcd(@4:NzNat,@3:NzInt))/ quot(@4:NzNat,gcd(@4:NzNat,@3:NzInt)))
    if gcd(@3:NzInt,@4:NzNat)> 1 = true .
  ccp RAT-ACU1468 for RAT-ACU-02 and RAT-ACU-01
    @1:NzInt + @2:[Rat]
    = @2:[Rat]+(quot(@1:NzInt,gcd(1,@1:NzInt))/ quot(1,gcd(1,@1:NzInt)))
    if gcd(1,@1:NzInt)> 1 = true .
  ccp RAT-ACU3907 for RAT-ACU-14 and RAT-ACU-01
    ((@3:NzNat * @4:NzInt)+ @5:NzNat * max(@2:NzInt,@3:NzNat * @1:NzInt))/ @3:NzNat * @5:NzNat
    =(max(@2:NzInt,@3:NzNat * @1:NzInt)/ @3:NzNat)+(quot(@4:NzInt,gcd(@5:NzNat,@4:NzInt))/ quot(@5:NzNat,gcd(@5:NzNat,@4:NzInt)))
    if gcd(@4:NzInt,@5:NzNat)> 1 = true .
  ccp RAT-ACU4634 for RAT-ACU-15 and RAT-ACU-01
    ((@6:NzNat * max(@2:NzNat * @3:NzInt,@4:NzNat * @1:NzInt))+ @2:NzNat * @4:NzNat * @5:NzInt)/ @2:NzNat * @4:NzNat * @6:NzNat
    =(max(@2:NzNat * @3:NzInt,@4:NzNat * @1:NzInt)/ @2:NzNat * @4:NzNat)+(quot(@5:NzInt,gcd(@6:NzNat,@5:NzInt))/ quot(@6:NzNat,gcd(@6:NzNat,
    @5:NzInt)))
    if gcd(@5:NzInt,@6:NzNat)> 1 = true .
  ccp RAT-ACU4908 for RAT-ACU-16 and RAT-ACU-01
    ((@3:NzNat * @4:NzInt)+ @5:NzNat * min(@2:NzInt,@3:NzNat * @1:NzInt))/ @3:NzNat * @5:NzNat
    =(min(@2:NzInt,@3:NzNat * @1:NzInt)/ @3:NzNat)+(quot(@4:NzInt,gcd(@5:NzNat,@4:NzInt))/ quot(@5:NzNat,gcd(@5:NzNat,@4:NzInt)))
    if gcd(@4:NzInt,@5:NzNat)> 1 = true .
  ccp RAT-ACU5219 for INT-FVP-10 and RAT-ACU-01
    (@3:NzInt + -(@2:NzNat * @4:NzNat))/ @4:NzNat
    = - @2:NzNat +(quot(@3:NzInt,gcd(@4:NzNat,@3:NzInt))/ quot(@4:NzNat,gcd(@4:NzNat,@3:NzInt)))
    if gcd(@4:NzNat,@3:NzInt)> 1 = true .
  ccp RAT-ACU5635 for RAT-ACU-17 and RAT-ACU-01
    ((@6:NzNat * min(@2:NzNat * @3:NzInt,@4:NzNat * @1:NzInt))+ @2:NzNat * @4:NzNat * @5:NzInt)/ @2:NzNat * @4:NzNat * @6:NzNat
    =(min(@2:NzNat * @3:NzInt,@4:NzNat * @1:NzInt)/ @2:NzNat * @4:NzNat)+(quot(@5:NzInt,gcd(@6:NzNat,@5:NzInt))/ quot(@6:NzNat,gcd(@6:NzNat,
    @5:NzInt)))
    if gcd(@5:NzInt,@6:NzNat)> 1 = true .
  ccp RAT-ACU5738 for INT-FVP-05 and RAT-ACU-01
    (@1:NzInt + - @2:NzNat)/ @2:NzNat
    = - 1 +(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU6008 for INT-FVP-06 and RAT-ACU-01
    (@2:NzInt + -(@3:NzNat + @1:NzNat * @3:NzNat))/ @3:NzNat
    = -(1 + @1:NzNat)+(quot(@2:NzInt,gcd(@3:NzNat,@2:NzInt))/ quot(@3:NzNat,gcd(@3:NzNat,@2:NzInt)))
    if gcd(@3:NzNat,@2:NzInt)> 1 = true .
  ccp RAT-ACU6614 for NAT-ACU-02 and RAT-ACU-01
    (@3:NzNat + @2:NzInt)/ @3:NzNat
    = 1 +(quot(@2:NzInt,gcd(@3:NzNat,@2:NzInt))/ quot(@3:NzNat,gcd(@3:NzNat,@2:NzInt)))
    if gcd(@3:NzNat,@2:NzInt)> 1 = true .
  ccp RAT-ACU7770 for RAT-ACU-13 and RAT-ACU-01
    ((@2:NzNat * @3:NzInt)+ @4:NzNat * | @1:NzInt |)/ @2:NzNat * @4:NzNat
    =(| @1:NzInt | / @2:NzNat)+(quot(@3:NzInt,gcd(@4:NzNat,@3:NzInt))/ quot(@4:NzNat,gcd(@4:NzNat,@3:NzInt)))
    if gcd(@3:NzInt,@4:NzNat)> 1 = true .
  ccp RAT-ACU7774 for RAT-ACU-09 and RAT-ACU-01
    ((@2:NzNat * @3:NzInt)+ @4:NzNat * @1:NzInt)/ @2:NzNat * @4:NzNat
    =(@1:NzInt / @2:NzNat)+(quot(@3:NzInt,gcd(@4:NzNat,@3:NzInt))/ quot(@4:NzNat,gcd(@4:NzNat,@3:NzInt)))
    if gcd(@3:NzInt,@4:NzNat)> 1 = true .
  ccp RAT-ACU8094 for RAT-ACU-02 and RAT-ACU-01
    @1:NzInt
    = quot(@1:NzInt,gcd(1,@1:NzInt))/ quot(1,gcd(1,@1:NzInt))
    if gcd(1,@1:NzInt)> 1 = true .
  ccp RAT-ACU8257 for RAT-ACU-01 and RAT-ACU-08
    @3:NzInt +(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    =(@1:NzInt + @2:NzNat * @3:NzInt)/ @2:NzNat
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8367 for RAT-ACU-01 and RAT-ACU-07
    -(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = - @1:NzInt / @2:NzNat
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8368 for RAT-ACU-01 and RAT-ACU-11
    @3:NzInt *(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    =(@1:NzInt * @3:NzInt)/ @2:NzNat
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8369 for RAT-ACU-01 and RAT-ACU-12
    (@3:NzInt / @4:NzNat)*(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    =(@1:NzInt * @3:NzInt)/ @2:NzNat * @4:NzNat
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8371 for RAT-ACU-01 and RAT-ACU-11
    @3:NzInt * @4:[Rat]*(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = @4:[Rat]*((@1:NzInt * @3:NzInt)/ @2:NzNat)
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8372 for RAT-ACU-01 and RAT-ACU-12
    @3:[Rat]*(@4:NzInt / @5:NzNat)*(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = @3:[Rat]*((@1:NzInt * @4:NzInt)/ @2:NzNat * @5:NzNat)
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8375 for RAT-ACU-01 and RAT-ACU-07
    @3:[Rat]+ -(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = @3:[Rat]+(- @1:NzInt / @2:NzNat)
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8376 for RAT-ACU-01 and RAT-ACU-04
    @3:[Rat]+(@4:NzInt /(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt))))
    = @3:[Rat]+((@2:NzNat * @4:NzInt)/ @1:NzInt)
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8378 for RAT-ACU-01 and RAT-ACU-05
    @3:[Rat]+((quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))/ @4:NzInt)
    = @3:[Rat]+(@1:NzInt / @2:NzNat * @4:NzInt)
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8379 for RAT-ACU-01 and RAT-ACU-06
    @3:[Rat]+((quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))/(@4:NzInt / @5:NzNat))
    = @3:[Rat]+((@5:NzNat * @1:NzInt)/ @2:NzNat * @4:NzInt)
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8380 for RAT-ACU-01 and RAT-ACU-06
    @3:[Rat]+((@4:NzInt / @5:NzNat)/(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt))))
    = @3:[Rat]+((@2:NzNat * @4:NzInt)/ @5:NzNat * @1:NzInt)
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8381 for RAT-ACU-01 and RAT-ACU-14
    @3:[Rat]+ max(@4:NzInt,quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = @3:[Rat]+(max(@1:NzInt,@2:NzNat * @4:NzInt)/ @2:NzNat)
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8382 for RAT-ACU-01 and RAT-ACU-15
    @3:[Rat]+ max(@4:NzInt / @5:NzNat,quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = @3:[Rat]+(max(@2:NzNat * @4:NzInt,@5:NzNat * @1:NzInt)/ @2:NzNat * @5:NzNat)
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8384 for RAT-ACU-01 and RAT-ACU-16
    @3:[Rat]+ min(@4:NzInt,quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = @3:[Rat]+(min(@1:NzInt,@2:NzNat * @4:NzInt)/ @2:NzNat)
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8385 for RAT-ACU-01 and RAT-ACU-17
    @3:[Rat]+ min(@4:NzInt / @5:NzNat,quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = @3:[Rat]+(min(@2:NzNat * @4:NzInt,@5:NzNat * @1:NzInt)/ @2:NzNat * @5:NzNat)
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8387 for RAT-ACU-01 and RAT-ACU-13
    @3:[Rat]+ | quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt))|
    = @3:[Rat]+(| @1:NzInt | / @2:NzNat)
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8393 for RAT-ACU-01 and RAT-ACU-04
    @3:NzInt /(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    =(@2:NzNat * @3:NzInt)/ @1:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8395 for RAT-ACU-01 and RAT-ACU-05
    (quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))/ @3:NzInt
    = @1:NzInt / @2:NzNat * @3:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8396 for RAT-ACU-01 and RAT-ACU-06
    (quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))/(@3:NzInt / @4:NzNat)
    =(@4:NzNat * @1:NzInt)/ @2:NzNat * @3:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8397 for RAT-ACU-01 and RAT-ACU-06
    (@3:NzInt / @4:NzNat)/(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    =(@2:NzNat * @3:NzInt)/ @4:NzNat * @1:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8398 for RAT-ACU-01 and RAT-ACU-20
    @3:NzInt >(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    =(@2:NzNat * @3:NzInt)> @1:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8399 for RAT-ACU-01 and RAT-ACU-22
    (quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))> @3:NzInt
    = @1:NzInt > @2:NzNat * @3:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8400 for RAT-ACU-01 and RAT-ACU-23
    (quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))>(@3:NzInt / @4:NzNat)
    =(@4:NzNat * @1:NzInt)> @2:NzNat * @3:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8401 for RAT-ACU-01 and RAT-ACU-23
    (@3:NzInt / @4:NzNat)>(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    =(@2:NzNat * @3:NzInt)> @4:NzNat * @1:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8402 for RAT-ACU-01 and RAT-ACU-18
    @3:NzInt ~(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = @1:NzInt ~ @2:NzNat * @3:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8403 for RAT-ACU-01 and RAT-ACU-19
    (@3:NzInt / @4:NzNat)~(quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    =(@2:NzNat * @3:NzInt)~ @4:NzNat * @1:NzInt
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8405 for RAT-ACU-01 and RAT-ACU-14
    max(@3:NzInt,quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = max(@1:NzInt,@2:NzNat * @3:NzInt)/ @2:NzNat
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8406 for RAT-ACU-01 and RAT-ACU-15
    max(@3:NzInt / @4:NzNat,quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = max(@2:NzNat * @3:NzInt,@4:NzNat * @1:NzInt)/ @2:NzNat * @4:NzNat
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8408 for RAT-ACU-01 and RAT-ACU-16
    min(@3:NzInt,quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = min(@1:NzInt,@2:NzNat * @3:NzInt)/ @2:NzNat
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8409 for RAT-ACU-01 and RAT-ACU-17
    min(@3:NzInt / @4:NzNat,quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt)))
    = min(@2:NzNat * @3:NzInt,@4:NzNat * @1:NzInt)/ @2:NzNat * @4:NzNat
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .
  ccp RAT-ACU8411 for RAT-ACU-01 and RAT-ACU-13
    | quot(@1:NzInt,gcd(@2:NzNat,@1:NzInt))/ quot(@2:NzNat,gcd(@2:NzNat,@1:NzInt))|
    = | @1:NzInt | / @2:NzNat
    if gcd(@1:NzInt,@2:NzNat)> 1 = true .

The following proof obligations must be checked for sort-decreasingness:

  cma RAT-ACU0 for equation RAT-ACU-01
    X@@@@Int:Int +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = true .

  cma RAT-ACU1 for equation RAT-ACU-01
    X@@@@Int:Int +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,M':NzNat))) : Rat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = true .

  cma RAT-ACU10 for equation RAT-ACU-01
    X@@@@NzNat:NzNat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,M':NzNat))) : PosRat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = true .

  cma RAT-ACU11 for equation RAT-ACU-01
    X@@@@NzNat:NzNat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = true .

  cma RAT-ACU12 for equation RAT-ACU-01
    X@@@@NzNeg:NzNeg +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = true .

  cma RAT-ACU13 for equation RAT-ACU-01
    X@@@@NzNeg:NzNeg +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,M':NzNat))) : Rat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = true .

  cma RAT-ACU14 for equation RAT-ACU-01
    X@@@@NzNeg:NzNeg +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = true .

  cma RAT-ACU15 for equation RAT-ACU-01
    X@@@@NzPosRat:NzPosRat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = true .

  cma RAT-ACU16 for equation RAT-ACU-01
    X@@@@NzPosRat:NzPosRat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,M':NzNat))) : PosRat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = true .

  cma RAT-ACU17 for equation RAT-ACU-01
    X@@@@NzPosRat:NzPosRat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = true .

  cma RAT-ACU18 for equation RAT-ACU-01
    X@@@@NzRat:NzRat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = true .

  cma RAT-ACU19 for equation RAT-ACU-01
    X@@@@NzRat:NzRat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,M':NzNat))) : Rat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = true .

  cma RAT-ACU2 for equation RAT-ACU-01
    X@@@@Int:Int +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = true .

  cma RAT-ACU20 for equation RAT-ACU-01
    X@@@@NzRat:NzRat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = true .

  cma RAT-ACU21 for equation RAT-ACU-01
    X@@@@PosRat:PosRat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = true .

  cma RAT-ACU22 for equation RAT-ACU-01
    X@@@@PosRat:PosRat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,M':NzNat))) : PosRat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = true .

  cma RAT-ACU23 for equation RAT-ACU-01
    X@@@@PosRat:PosRat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = true .

  cma RAT-ACU24 for equation RAT-ACU-01
    X@@@@Rat:Rat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = true .

  cma RAT-ACU25 for equation RAT-ACU-01
    X@@@@Rat:Rat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,M':NzNat))) : Rat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = true .

  cma RAT-ACU26 for equation RAT-ACU-01
    X@@@@Rat:Rat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = true .

  cma RAT-ACU27 for equation RAT-ACU-01
    X@@@@Zero:Zero +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = true .

  cma RAT-ACU28 for equation RAT-ACU-01
    X@@@@Zero:Zero +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,M':NzNat))) : PosRat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = true .

  cma RAT-ACU29 for equation RAT-ACU-01
    X@@@@Zero:Zero +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = true .

  cma RAT-ACU3 for equation RAT-ACU-01
    X@@@@Nat:Nat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = true .

  cma RAT-ACU30 for equation RAT-ACU-01
    quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat)) : NzRat
    if gcd(J':NzInt,M':NzNat)> 1 = true .

  cma RAT-ACU31 for equation RAT-ACU-01
    quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,M':NzNat)) : NzPosRat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = true .

  cma RAT-ACU32 for equation RAT-ACU-01
    quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,M':NzNat)) : NzRat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = true .

  cma RAT-ACU4 for equation RAT-ACU-01
    X@@@@Nat:Nat +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,M':NzNat))) : PosRat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = true .

  cma RAT-ACU5 for equation RAT-ACU-01
    X@@@@Nat:Nat +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = true .

  cma RAT-ACU6 for equation RAT-ACU-01
    X@@@@NzInt:NzInt +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = true .

  cma RAT-ACU7 for equation RAT-ACU-01
    X@@@@NzInt:NzInt +(quot(J'@NzNat:NzNat,gcd(J'@NzNat:NzNat,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNat:NzNat,M':NzNat))) : Rat
    if gcd(J'@NzNat:NzNat,M':NzNat)> 1 = true .

  cma RAT-ACU8 for equation RAT-ACU-01
    X@@@@NzInt:NzInt +(quot(J'@NzNeg:NzNeg,gcd(J'@NzNeg:NzNeg,M':NzNat))/ quot(M':NzNat,gcd(J'@NzNeg:NzNeg,M':NzNat))) : Rat
    if gcd(J'@NzNeg:NzNeg,M':NzNat)> 1 = true .

  cma RAT-ACU9 for equation RAT-ACU-01
    X@@@@NzNat:NzNat +(quot(J':NzInt,gcd(J':NzInt,M':NzNat))/ quot(M':NzNat,gcd(J':NzInt,M':NzNat))) : Rat
    if gcd(J':NzInt,M':NzNat)> 1 = true .

Maude>
